openapi: 3.0.0
paths:
  /v0/auth/{ref}/config:
    get:
      operationId: getGoTrueConfig
      summary: Gets GoTrue config
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGoTrueConfigResponse'
        '500':
          description: Failed to retrieve GoTrue config
      tags: &ref_0
        - projects auth
      security: &ref_1
        - bearer: []
    patch:
      operationId: updateGoTrueConfig
      summary: Updates GoTrue config
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGoTrueConfigBody'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoTrueConfig'
        '500':
          description: Failed to update GoTrue config
      tags: *ref_0
      security: *ref_1
  /v0/auth/{ref}/invite:
    post:
      operationId: sendInvite
      summary: Sends an invite to the given email
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
        '403':
          description: ''
        '500':
          description: Failed to send an invite to the given email
      tags:
        - projects auth
      security:
        - bearer: []
  /v0/auth/{ref}/magiclink:
    post:
      operationId: sendMagicLink
      summary: Sends a magic link to the given email
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
        '403':
          description: ''
        '500':
          description: Failed to send a magic link to the given email
      tags:
        - projects auth
      security:
        - bearer: []
  /v0/auth/{ref}/otp:
    post:
      operationId: sendOtp
      summary: Sends an OTP to the given phone number
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
        '403':
          description: ''
        '500':
          description: Failed to send an OTP to the given phone number
      tags:
        - projects auth
      security:
        - bearer: []
  /v0/auth/{ref}/recover:
    post:
      operationId: sendRecover
      summary: Sends a recovery email to the given email
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
        '403':
          description: ''
        '500':
          description: Failed to send a recovery email to the given email
      tags:
        - projects auth
      security:
        - bearer: []
  /v0/auth/{ref}/templates/{template}:
    get:
      operationId: getTemplate
      summary: Gets GoTrue template
      parameters:
        - name: ref
          required: true
          in: path
          schema:
            type: string
        - name: template
          required: true
          in: path
          schema:
            enum:
              - confirmation
              - email-change
              - invite
              - magic-link
              - recovery
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Failed to retrieve GoTrue template
      tags:
        - projects auth
  /v0/auth/{ref}/users:
    get:
      operationId: getUsers
      summary: Gets users
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: keywords
          required: true
          in: query
          schema:
            type: string
        - name: limit
          required: true
          in: query
          schema:
            type: string
        - name: offset
          required: true
          in: query
          schema:
            type: string
        - name: verified
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
        '403':
          description: ''
        '500':
          description: Failed to retrieve users
      tags: &ref_2
        - projects auth
      security: &ref_3
        - bearer: []
    delete:
      operationId: deleteUser
      summary: Delete user with given ID
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBody'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
        '403':
          description: ''
        '500':
          description: Failed to delete user
      tags: *ref_2
      security: *ref_3
  /v0/auth/{ref}/users/{id}/factors:
    delete:
      operationId: deleteFactors
      summary: Delete all factors associated to a user
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
        '403':
          description: ''
        '500':
          description: Failed to delete factors
      tags:
        - projects auth
      security:
        - bearer: []
  /v0/database/{ref}/backups:
    get:
      operationId: getBackups
      summary: Gets project backups
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsResponse'
        '500':
          description: Failed to get project backups
      tags: &ref_4
        - projects backup
      security: &ref_5
        - bearer: []
  /v0/database/{ref}/backups/download:
    post:
      operationId: downloadBackup
      summary: Download project backup
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadBackupBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadBackupResponse'
        '500':
          description: Failed to download project backup
      tags: *ref_4
      security: *ref_5
  /v0/database/{ref}/backups/restore:
    post:
      operationId: restoreBackup
      summary: Restore project backup
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreLogicalBackupBody'
      responses:
        '201':
          description: ''
        '500':
          description: Failed to restore project backup
      tags: *ref_4
      security: *ref_5
  /v0/database/{ref}/backups/restore-physical:
    post:
      operationId: restorePhysicalBackup
      summary: Restore project with a physical backup
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestorePhysicalBackupBody'
      responses:
        '201':
          description: ''
        '500':
          description: Failed to restore project with physical backup
      tags: *ref_4
      security: *ref_5
  /v0/database/{ref}/backups/pitr:
    post:
      operationId: restorePointInTimeBackup
      summary: Restore project to a previous point in time
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointInTimeRestoreBody'
      responses:
        '201':
          description: ''
        '500':
          description: Failed to restore project to a previous point in time
      tags: *ref_4
      security: *ref_5
  /v0/database/{ref}/hook-logs:
    get:
      operationId: getHookLogs
      summary: Gets hook logs with the given ID
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          schema:
            type: number
        - name: limit
          required: false
          in: query
          schema:
            type: string
        - name: offset
          required: false
          in: query
          schema:
            type: string
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
        '403':
          description: ''
        '500':
          description: Failed to get hook logs with the given ID
      security: &ref_6
        - bearer: []
  /v0/database/{ref}/hook-enable:
    post:
      operationId: enableHooks
      summary: Enables Database Webhooks on the project
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '201':
          description: ''
        '403':
          description: ''
        '500':
          description: Failed to enable Database Webhooks on the project
      security: *ref_6
  /v0/organizations:
    get:
      operationId: getOrganizations
      summary: Gets user's organizations
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationResponse'
        '500':
          description: Failed to retrieve user's organizations
      tags: &ref_7
        - organizations
      security: &ref_8
        - bearer: []
    post:
      operationId: createOrganizationWithTier
      summary: Creates an organization (v2)
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationBodyV2'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
        '500':
          description: Unexpected error creating an organization
      tags: *ref_7
      security: *ref_8
  /v0/pg-meta/{ref}/column-privileges:
    get:
      operationId: getColumnPrivileges
      summary: Retrieve column privileges
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostgresColumnPrivileges'
        '403':
          description: ''
        '500':
          description: Failed to retrieve column privileges
      security: &ref_9
        - bearer: []
    post:
      operationId: grantColumnPrivileges
      summary: Grant column privileges
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GrantColumnPrivilegesBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostgresColumnPrivileges'
        '403':
          description: ''
        '500':
          description: Failed to grant column privileges
      security: *ref_9
    delete:
      operationId: revokeColumnPrivileges
      summary: Revoke column privileges
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RevokeColumnPrivilegesBody'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostgresColumnPrivileges'
        '403':
          description: ''
        '500':
          description: Failed to revoke column privileges
      security: *ref_9
  /v0/pg-meta/{ref}/columns:
    get:
      operationId: getColumns
      summary: Gets project pg.columns
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: included_schemas
          required: true
          in: query
          schema:
            type: string
        - name: excluded_schemas
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostgresColumn'
        '403':
          description: ''
        '500':
          description: Failed to get pg.columns
      tags: &ref_10
        - projects pg-meta
      security: &ref_11
        - bearer: []
    post:
      operationId: createColumn
      summary: Creates project pg.column
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateColumnBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresColumn'
        '403':
          description: ''
        '500':
          description: Failed to create pg.column
      tags: *ref_10
      security: *ref_11
    patch:
      operationId: updateColumn
      summary: Updates project pg.column with the given ID
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          description: Column ID
          schema:
            pattern: COLUMN_ID_REGEXP
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateColumnBody'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresColumn'
        '403':
          description: ''
        '500':
          description: Failed to update pg.column with the given ID
      tags: *ref_10
      security: *ref_11
    delete:
      operationId: deleteColumn
      summary: Deletes project pg.column with the given ID
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          description: Column ID
          schema:
            pattern: COLUMN_ID_REGEXP
            type: string
        - name: cascade
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresColumn'
        '403':
          description: ''
        '500':
          description: Failed to delete pg.column with the given ID
      tags: *ref_10
      security: *ref_11
  /v0/pg-meta/{ref}/extensions:
    get:
      operationId: getExtensions
      summary: Gets project pg.extensions
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostgresExtension'
        '403':
          description: ''
        '500':
          description: Failed to get pg.extensions
      tags: &ref_12
        - projects pg-meta
      security: &ref_13
        - bearer: []
    post:
      operationId: createExtension
      summary: Creates project pg.extension
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExtensionBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresExtension'
        '403':
          description: ''
        '500':
          description: Failed to create pg.extension
      tags: *ref_12
      security: *ref_13
    delete:
      operationId: deleteExtension
      summary: Deletes project pg.extension with the given ID
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          description: Extension ID
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresExtension'
        '403':
          description: ''
        '500':
          description: Failed to delete pg.extension with the given ID
      tags: *ref_12
      security: *ref_13
  /v0/pg-meta/{ref}/foreign-tables:
    get:
      operationId: getForeignTables
      summary: Retrieve database foreign tables
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          schema:
            type: string
        - name: limit
          required: true
          in: query
          schema:
            type: string
        - name: offset
          required: true
          in: query
          schema:
            type: string
        - name: include_columns
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostgresForeignTable'
        '403':
          description: ''
        '500':
          description: Failed to retrieve database foreign tables
      tags:
        - projects pg-meta
      security:
        - bearer: []
  /v0/pg-meta/{ref}/functions:
    get:
      operationId: getFunctions
      summary: Gets project pg.functions
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: included_schemas
          required: true
          in: query
          schema:
            type: string
        - name: excluded_schemas
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostgresFunction'
        '403':
          description: ''
        '500':
          description: Failed to get pg.functions
      tags: &ref_14
        - projects pg-meta
      security: &ref_15
        - bearer: []
    post:
      operationId: createFunction
      summary: Creates project pg.function
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFunctionBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresFunction'
        '403':
          description: ''
        '500':
          description: Failed to create pg.function
      tags: *ref_14
      security: *ref_15
    patch:
      operationId: updateFunction
      summary: Updates project pg.function with the given ID
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          description: Function ID
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFunctionBody'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresFunction'
        '403':
          description: ''
        '500':
          description: Failed to update pg.function with the given ID
      tags: *ref_14
      security: *ref_15
    delete:
      operationId: deleteFunction
      summary: Deletes project pg.function with the given ID
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          description: Function ID
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresFunction'
        '403':
          description: ''
        '500':
          description: Failed to delete pg.function with the given ID
      tags: *ref_14
      security: *ref_15
  /v0/pg-meta/{ref}/materialized-views:
    get:
      operationId: getMaterializedViews
      summary: Retrieve database materialized views
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          schema:
            type: string
        - name: included_schemas
          required: true
          in: query
          schema:
            type: string
        - name: excluded_schemas
          required: true
          in: query
          schema:
            type: string
        - name: limit
          required: true
          in: query
          schema:
            type: string
        - name: offset
          required: true
          in: query
          schema:
            type: string
        - name: include_columns
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostgresMaterializedView'
        '403':
          description: ''
        '500':
          description: Failed to retrieve database materialized views
      tags:
        - projects pg-meta
      security:
        - bearer: []
  /v0/pg-meta/{ref}/policies:
    get:
      operationId: getPolicies
      summary: Gets project pg.policies
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: included_schemas
          required: true
          in: query
          schema:
            type: string
        - name: excluded_schemas
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostgresPolicy'
        '403':
          description: ''
        '500':
          description: Failed to get pg.policies
      tags: &ref_16
        - projects pg-meta
      security: &ref_17
        - bearer: []
    post:
      operationId: createPolicy
      summary: Creates project pg.policy
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePolicyBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresPolicy'
        '403':
          description: ''
        '500':
          description: Failed to create pg.policy
      tags: *ref_16
      security: *ref_17
    patch:
      operationId: updatePolicy
      summary: Updates project pg.policy with the given ID
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          description: Policy ID
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePolicyBody'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresPolicy'
        '403':
          description: ''
        '500':
          description: Failed to update pg.policy with the given ID
      tags: *ref_16
      security: *ref_17
    delete:
      operationId: deletePolicy
      summary: Deletes project pg.policy with the given ID
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          description: Policy ID
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresPolicy'
        '403':
          description: ''
        '500':
          description: Failed to delete pg.policy with the given ID
      tags: *ref_16
      security: *ref_17
  /v0/pg-meta/{ref}/publications:
    get:
      operationId: getPublications
      summary: Gets project pg.publications
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostgresPublication'
        '403':
          description: ''
        '500':
          description: Failed to get pg.publications
      tags: &ref_18
        - projects pg-meta
      security: &ref_19
        - bearer: []
    post:
      operationId: createPublication
      summary: Gets project pg.publications
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePublicationBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresPublication'
        '403':
          description: ''
        '500':
          description: Failed to create pg.publication
      tags: *ref_18
      security: *ref_19
    patch:
      operationId: updatePublication
      summary: Updates project pg.publication with the given ID
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          description: Publication ID
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePublicationBody'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresPublication'
        '403':
          description: ''
        '500':
          description: Failed to update pg.publication with the given ID
      tags: *ref_18
      security: *ref_19
    delete:
      operationId: deletePublication
      summary: Deletes project pg.publication with the given ID
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          description: Publication ID
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresPublication'
        '403':
          description: ''
        '500':
          description: Failed to delete pg.publication with the given ID
      tags: *ref_18
      security: *ref_19
  /v0/pg-meta/{ref}/query:
    post:
      operationId: runQuery
      summary: Run sql query
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunQueryBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
        '403':
          description: ''
        '500':
          description: Failed to run sql query
      tags: &ref_20
        - projects pg-meta
      security: &ref_21
        - bearer: []
  /v0/pg-meta/{ref}/query/format:
    post:
      operationId: formatQuery
      summary: Format sql query
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormatQueryBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Failed to format sql query
      tags: *ref_20
      security: *ref_21
  /v0/pg-meta/{ref}/query/validate:
    post:
      operationId: validateQuery
      summary: Validate sql query
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateQueryBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateQueryResponse'
        '500':
          description: Failed to validate sql query
      tags: *ref_20
      security: *ref_21
  /v0/pg-meta/{ref}/roles:
    get:
      operationId: getRoles
      summary: Gets project pg.roles
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostgresRole'
        '403':
          description: ''
        '500':
          description: Failed to get pg.roles
      tags: &ref_22
        - projects pg-meta
      security: &ref_23
        - bearer: []
    post:
      operationId: createRole
      summary: Creates project pg.role
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresRole'
        '403':
          description: ''
        '500':
          description: Failed to create pg.role
      tags: *ref_22
      security: *ref_23
    patch:
      operationId: updateRole
      summary: Updates project pg.role with the given ID
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          description: Role ID
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoleBody'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresRole'
        '403':
          description: ''
        '500':
          description: Failed to update pg.role with the given ID
      tags: *ref_22
      security: *ref_23
    delete:
      operationId: deleteRole
      summary: Deletes project pg.role with the given ID
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          description: Role ID
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresRole'
        '403':
          description: ''
        '500':
          description: Failed to delete pg.role with the given ID
      tags: *ref_22
      security: *ref_23
  /v0/pg-meta/{ref}/schemas:
    get:
      operationId: getSchemas
      summary: Gets project pg.schemas
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostgresSchema'
        '403':
          description: ''
        '500':
          description: Failed to get pg.schemas
      tags: &ref_24
        - projects pg-meta
      security: &ref_25
        - bearer: []
    post:
      operationId: createSchema
      summary: Creates project pg.schema
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSchemaBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresSchema'
        '403':
          description: ''
        '500':
          description: Failed to create pg.schema
      tags: *ref_24
      security: *ref_25
    patch:
      operationId: updateSchema
      summary: Updates project pg.schema with the given ID
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          description: Schema ID
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSchemaBody'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresSchema'
        '403':
          description: ''
        '500':
          description: Failed to update pg.schema with the given ID
      tags: *ref_24
      security: *ref_25
    delete:
      operationId: deleteSchema
      summary: Deletes project pg.schema with the given ID
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          description: Schema ID
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresSchema'
        '403':
          description: ''
        '500':
          description: Failed to delete pg.schema with the given ID
      tags: *ref_24
      security: *ref_25
  /v0/pg-meta/{ref}/search/tables:
    post:
      operationId: searchTables
      summary: Searches project pg.tables. Return maximum 50 results.
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchTableBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Table'
        '403':
          description: ''
        '500':
          description: Failed to search pg.tables
      tags: &ref_26
        - projects pg-meta
      security: &ref_27
        - bearer: []
  /v0/pg-meta/{ref}/search/columns:
    post:
      operationId: searchColumns
      summary: Searches project pg.columns. Return maximum 50 results.
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchColumnBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Column'
        '403':
          description: ''
        '500':
          description: Failed to search pg.columns
      tags: *ref_26
      security: *ref_27
  /v0/pg-meta/{ref}/table-privileges:
    get:
      operationId: getTablePrivileges
      summary: Retrieve table privileges
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostgresTablePrivileges'
        '403':
          description: ''
        '500':
          description: Failed to retrieve table privileges
      security: &ref_28
        - bearer: []
    post:
      operationId: grantTablePrivileges
      summary: Grant table privileges
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GrantTablePrivilegesBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostgresTablePrivileges'
        '403':
          description: ''
        '500':
          description: Failed to grant table privileges
      security: *ref_28
    delete:
      operationId: revokeTablePrivileges
      summary: Revoke table privileges
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RevokeTablePrivilegesBody'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostgresTablePrivileges'
        '403':
          description: ''
        '500':
          description: Failed to revoke table privileges
      security: *ref_28
  /v0/pg-meta/{ref}/tables:
    get:
      operationId: getTables
      summary: Gets project pg.tables or pg.table with the given ID
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: false
          in: query
          description: Table ID
          schema:
            type: string
        - name: include_system_schemas
          required: true
          in: query
          schema:
            type: string
        - name: included_schemas
          required: true
          in: query
          schema:
            type: string
        - name: excluded_schemas
          required: true
          in: query
          schema:
            type: string
        - name: limit
          required: true
          in: query
          schema:
            type: string
        - name: offset
          required: true
          in: query
          schema:
            type: string
        - name: include_columns
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostgresTable'
        '403':
          description: ''
        '500':
          description: Failed to get pg.tables or pg.table with the given ID
      tags: &ref_29
        - projects pg-meta
      security: &ref_30
        - bearer: []
    post:
      operationId: createTable
      summary: Creates project pg.table
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTableBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresTable'
        '403':
          description: ''
        '500':
          description: Failed to create pg.table
      tags: *ref_29
      security: *ref_30
    patch:
      operationId: updateTable
      summary: Updates project pg.table with the given ID
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          description: Table ID
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTableBody'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresTable'
        '403':
          description: ''
        '500':
          description: Failed to update pg.table with the given ID
      tags: *ref_29
      security: *ref_30
    delete:
      operationId: deleteTable
      summary: Deletes project pg.table with the given ID
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          description: Table ID
          schema:
            type: number
        - name: cascade
          required: true
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresTable'
        '403':
          description: ''
        '500':
          description: Failed to delete pg.table with the given ID
      tags: *ref_29
      security: *ref_30
  /v0/pg-meta/{ref}/triggers:
    get:
      operationId: getTriggers
      summary: Gets project pg.triggers
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: included_schemas
          required: true
          in: query
          schema:
            type: string
        - name: excluded_schemas
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostgresTrigger'
        '403':
          description: ''
        '500':
          description: Failed to get pg.triggers
      tags: &ref_31
        - projects pg-meta
      security: &ref_32
        - bearer: []
    post:
      operationId: createTrigger
      summary: Creates project pg.trigger
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTriggerBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresTrigger'
        '403':
          description: ''
        '500':
          description: Failed to create pg.trigger
      tags: *ref_31
      security: *ref_32
    patch:
      operationId: updateTrigger
      summary: Updates project pg.trigger with the given ID
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          description: Trigger ID
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTriggerBody'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresTrigger'
        '403':
          description: ''
        '500':
          description: Failed to update pg.trigger with the given ID
      tags: *ref_31
      security: *ref_32
    delete:
      operationId: deleteTrigger
      summary: Deletes project pg.trigger with the given ID
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          description: Trigger ID
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresTrigger'
        '403':
          description: ''
        '500':
          description: Failed to delete pg.trigger with the given ID
      tags: *ref_31
      security: *ref_32
  /v0/pg-meta/{ref}/types:
    get:
      operationId: getTypes
      summary: Gets project pg.types
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: included_schemas
          required: true
          in: query
          schema:
            type: string
        - name: excluded_schemas
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostgresType'
        '403':
          description: ''
        '500':
          description: Failed to get pg.types
      tags:
        - projects pg-meta
      security:
        - bearer: []
  /v0/pg-meta/{ref}/views:
    get:
      operationId: getViews
      summary: Retrieve database views
      parameters:
        - name: x-connection-encrypted
          required: true
          in: header
          schema:
            type: string
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: query
          schema:
            type: string
        - name: include_system_schemas
          required: true
          in: query
          schema:
            type: string
        - name: included_schemas
          required: true
          in: query
          schema:
            type: string
        - name: excluded_schemas
          required: true
          in: query
          schema:
            type: string
        - name: limit
          required: true
          in: query
          schema:
            type: string
        - name: offset
          required: true
          in: query
          schema:
            type: string
        - name: include_columns
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostgresView'
        '403':
          description: ''
        '500':
          description: Failed to retrieve database views
      tags:
        - projects pg-meta
      security:
        - bearer: []
  /v0/projects:
    get:
      operationId: getProjects
      summary: Gets all projects that belong to the authenticated user
      description: Only returns the minimal project info
      parameters:
        - name: include_readonly_mode_status
          required: true
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectInfo'
      tags: &ref_33
        - projects
      security: &ref_34
        - bearer: []
    post:
      operationId: createProject
      summary: Creates a project
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectResponse'
      tags: *ref_33
      security: *ref_34
  /v0/projects/metrics:
    get:
      operationId: getProjectsMetrics
      summary: Get metrics
      description: |-
        At most 50 projects can be queried at a time.
        Currently supports '1d', '3d', and '7d' intervals.
      parameters: []
      # GET Requests should not have a request body
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMetricsBody'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMetricsResponse'
      tags:
        - projects metrics (beta)
      security:
        - bearer: []
  /v0/storage/{ref}/buckets/{id}:
    get:
      operationId: getBucket
      summary: Gets bucket
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: path
          description: Storage bucket id
          schema:
            pattern: /^(\w|!|-|\.|\*|'|\(|\)| |&|\$|@|=|;|:|\+|,|\?)*$/
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageBucket'
        '403':
          description: ''
        '500':
          description: Failed to get bucket
      tags: &ref_35
        - projects storage
      security: &ref_36
        - bearer: []
    patch:
      operationId: updateBucket
      summary: Updates bucket
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: path
          description: Storage bucket id
          schema:
            pattern: /^(\w|!|-|\.|\*|'|\(|\)| |&|\$|@|=|;|:|\+|,|\?)*$/
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStorageBucketBody'
      responses:
        '200':
          description: ''
        '403':
          description: ''
        '500':
          description: Failed to update bucket
      tags: *ref_35
      security: *ref_36
    delete:
      operationId: deleteBucket
      summary: Deletes bucket
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: path
          description: Storage bucket id
          schema:
            pattern: /^(\w|!|-|\.|\*|'|\(|\)| |&|\$|@|=|;|:|\+|,|\?)*$/
            type: string
      responses:
        '200':
          description: ''
        '403':
          description: ''
        '500':
          description: Failed to delete bucket
      tags: *ref_35
      security: *ref_36
  /v0/storage/{ref}/buckets/{id}/empty:
    post:
      operationId: emptyBucket
      summary: Removes all objects inside a single bucket.
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: path
          description: Storage bucket id
          schema:
            pattern: /^(\w|!|-|\.|\*|'|\(|\)| |&|\$|@|=|;|:|\+|,|\?)*$/
            type: string
      responses:
        '201':
          description: ''
        '403':
          description: ''
        '500':
          description: Failed to empty bucket
      tags: *ref_35
      security: *ref_36
  /v0/storage/{ref}/buckets:
    get:
      operationId: getBuckets
      summary: Gets list of buckets
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StorageBucket'
        '403':
          description: ''
        '500':
          description: Failed to get list of buckets
      tags: &ref_37
        - projects storage
      security: &ref_38
        - bearer: []
    post:
      operationId: createBucket
      summary: Create bucket
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStorageBucketBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '403':
          description: ''
        '500':
          description: Failed to create bucket
      tags: *ref_37
      security: *ref_38
  /v0/storage/{ref}/buckets/{id}/objects/list:
    post:
      operationId: getObjects
      summary: Gets list of objects with the given bucket
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: path
          description: Storage bucket id
          schema:
            pattern: /^(\w|!|-|\.|\*|'|\(|\)| |&|\$|@|=|;|:|\+|,|\?)*$/
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetObjectsBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StorageObject'
        '403':
          description: ''
        '500':
          description: Failed to get list of objects with the given bucket
      tags: &ref_39
        - projects storage
      security: &ref_40
        - bearer: []
  /v0/storage/{ref}/buckets/{id}/objects/public-url:
    post:
      operationId: createPublicUrl
      summary: Creates URL for an asset in a public bucket
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: path
          description: Storage bucket id
          schema:
            pattern: /^(\w|!|-|\.|\*|'|\(|\)| |&|\$|@|=|;|:|\+|,|\?)*$/
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPublicUrlBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicUrlResponse'
        '403':
          description: ''
        '500':
          description: Failed to create public URL
      tags: *ref_39
      security: *ref_40
  /v0/storage/{ref}/buckets/{id}/objects/download:
    post:
      operationId: download
      summary: Downloads a file from a private bucket
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: path
          description: Storage bucket id
          schema:
            pattern: /^(\w|!|-|\.|\*|'|\(|\)| |&|\$|@|=|;|:|\+|,|\?)*$/
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadObjectBody'
      responses:
        '201':
          description: ''
        '403':
          description: ''
        '500':
          description: Failed to download the file
      tags: *ref_39
      security: *ref_40
  /v0/storage/{ref}/buckets/{id}/objects/sign:
    post:
      operationId: createSignedUrl
      summary: Creates a signed URL
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: path
          description: Storage bucket id
          schema:
            pattern: /^(\w|!|-|\.|\*|'|\(|\)| |&|\$|@|=|;|:|\+|,|\?)*$/
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSignedUrlBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignedUrlResponse'
        '403':
          description: ''
        '500':
          description: Failed to create a signed URL
      tags: *ref_39
      security: *ref_40
  /v0/storage/{ref}/buckets/{id}/objects/sign-multi:
    post:
      operationId: createSignedUrls
      summary: Gets multiple signed URLs
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: path
          description: Storage bucket id
          schema:
            pattern: /^(\w|!|-|\.|\*|'|\(|\)| |&|\$|@|=|;|:|\+|,|\?)*$/
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSignedUrlsBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SignedUrlsResponse'
        '403':
          description: ''
        '500':
          description: Failed to get multiple signed URLs
      tags: *ref_39
      security: *ref_40
  /v0/storage/{ref}/buckets/{id}/objects/copy:
    post:
      operationId: copyObject
      summary: Copys object
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: path
          description: Storage bucket id
          schema:
            pattern: /^(\w|!|-|\.|\*|'|\(|\)| |&|\$|@|=|;|:|\+|,|\?)*$/
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyObjectBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyObjectResponse'
        '403':
          description: ''
        '500':
          description: Failed to copy object
      tags: *ref_39
      security: *ref_40
  /v0/storage/{ref}/buckets/{id}/objects/move:
    post:
      operationId: moveObject
      summary: Move object
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: path
          description: Storage bucket id
          schema:
            pattern: /^(\w|!|-|\.|\*|'|\(|\)| |&|\$|@|=|;|:|\+|,|\?)*$/
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveObjectBody'
      responses:
        '201':
          description: ''
        '403':
          description: ''
        '500':
          description: Failed to move object
      tags: *ref_39
      security: *ref_40
  /v0/storage/{ref}/buckets/{id}/objects:
    delete:
      operationId: deleteObjects
      summary: Deletes objects
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: id
          required: true
          in: path
          description: Storage bucket id
          schema:
            pattern: /^(\w|!|-|\.|\*|'|\(|\)| |&|\$|@|=|;|:|\+|,|\?)*$/
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteObjectsBody'
      responses:
        '200':
          description: ''
        '403':
          description: ''
        '500':
          description: Failed to delete objects
      tags: *ref_39
      security: *ref_40
  /v0/notifications:
    get:
      operationId: getNotificationsV2
      summary: Get notifications
      parameters:
        - name: archived
          required: false
          in: query
          schema:
            type: boolean
        - name: offset
          required: true
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - name: limit
          required: true
          in: query
          schema:
            minimum: 0
            maximum: 1000
            default: 100
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationResponseV2'
        '500':
          description: Failed to retrieve notifications
      security: &ref_41
        - bearer: []
    patch:
      operationId: updateNotificationsV2
      summary: Update notifications
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationResponseV2'
        '500':
          description: Failed to update notifications
      security: *ref_41
    delete:
      operationId: deleteNotifications
      summary: Delete notifications
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotificationsBodyV1'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationResponseV1'
        '500':
          description: Failed to delete notifications
      security: *ref_41
  /v0/status:
    get:
      operationId: getStatus
      summary: Get infrastructure status
      parameters: []
      responses:
        '200':
          description: ''
        '500':
          description: Failed to retrieve infrastructure status
      security:
        - bearer: []
  /v0/organizations/{slug}:
    patch:
      operationId: updateOrganization
      summary: Updates organization
      parameters:
        - name: slug
          required: true
          in: path
          description: Organization slug
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationBody'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSlugResponse'
        '500':
          description: Failed to update organization
      tags: &ref_42
        - organizations
      security: &ref_43
        - bearer: []
    delete:
      operationId: deleteOrganization
      summary: Deletes organization
      parameters:
        - name: slug
          required: true
          in: path
          description: Organization slug
          schema:
            type: string
      responses:
        '200':
          description: ''
        '403':
          description: ''
        '500':
          description: Failed to delete organization
      tags: *ref_42
      security: *ref_43
  /v0/organizations/{slug}/roles:
    get:
      operationId: addMember
      summary: Gets the given organization's roles
      parameters:
        - name: slug
          required: true
          in: path
          description: Organization slug
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        '500':
          description: Failed to retrieve the organization's roles
      tags:
        - organizations
      security:
        - bearer: []
  /v0/organizations/{slug}/members/invite:
    get:
      operationId: getInvitedUsers
      summary: Gets invited users
      parameters:
        - name: slug
          required: true
          in: path
          description: Organization slug
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invite'
        '500':
          description: Failed to get invited users
      tags: &ref_44
        - organizations members
      security: &ref_45
        - bearer: []
    delete:
      operationId: deleteInvitedUser
      summary: Delete invited user
      parameters:
        - name: slug
          required: true
          in: path
          description: Organization slug
          schema:
            type: string
        - name: invited_id
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
        '500':
          description: Failed to delete invited user
      tags: *ref_44
      security: *ref_45
    post:
      operationId: inviteUser
      summary: Invites user
      parameters:
        - name: slug
          required: true
          in: path
          description: Organization slug
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteUserBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendInviteResponse'
        '500':
          description: Failed to invite user
      tags: *ref_44
      security: *ref_45
  /v0/organizations/{slug}/members/join:
    get:
      operationId: getInvite
      summary: Gets invite
      parameters:
        - name: slug
          required: true
          in: path
          description: Organization slug
          schema:
            type: string
        - name: token
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteResponse'
        '500':
          description: Failed to get invite
      tags: &ref_46
        - organizations members
      security: &ref_47
        - bearer: []
    post:
      operationId: joinOrganization
      summary: Joins organization
      parameters:
        - name: slug
          required: true
          in: path
          description: Organization slug
          schema:
            type: string
        - name: token
          required: true
          in: query
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JoinResponse'
        '500':
          description: Failed to join organization
      tags: *ref_46
      security: *ref_47
  /v0/organizations/{slug}/members:
    get:
      operationId: getMembers
      summary: Gets organization's members
      parameters:
        - name: slug
          required: true
          in: path
          description: Organization slug
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
        '500':
          description: Failed to retrieve organization's members
      tags: &ref_48
        - organizations members
      security: &ref_49
        - bearer: []
  /v0/organizations/{slug}/members/{gotrue_id}:
    patch:
      operationId: updateMember
      summary: Updates organization member
      parameters:
        - name: slug
          required: true
          in: path
          description: Organization slug
          schema:
            type: string
        - name: gotrue_id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMemberBody'
      responses:
        '200':
          description: ''
        '500':
          description: Failed to update organization member
      tags: *ref_48
      security: *ref_49
    delete:
      operationId: deleteMember
      summary: Removes organization member
      parameters:
        - name: slug
          required: true
          in: path
          description: Organization slug
          schema:
            type: string
        - name: gotrue_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
        '500':
          description: Failed to remove organization member
      tags: *ref_48
      security: *ref_49
  /v0/projects/{ref}/content:
    parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
    get:
      operationId: getProjectContent
      summary: Gets project's content
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserContentResponse'
        '500':
          description: Failed to retrieve project's content
      tags: &ref_50
        - projects
      security: &ref_51
        - bearer: []
    post:
      operationId: createContent
      summary: Creates project's content
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContentParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserContentObject'
        '500':
          description: Failed to create project's content
      tags: *ref_50
      security: *ref_51
    put:
      operationId: updateWholeContent
      summary: Updates project's content
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertContentParams'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserContentObject'
        '500':
          description: Failed to update project's content
      tags: *ref_50
      security: *ref_51
    patch:
      operationId: updateContent
      summary: Updates project's content
      # parameters:
      #   - name: id
      #     required: true
      #     in: query
      #     schema:
      #       type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContentParams'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserContentObject'
        '500':
          description: Failed to update project's content
      tags: *ref_50
      security: *ref_51
    delete:
      operationId: deleteContent
      summary: Deletes project's content
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserContentObject'
        '500':
          description: Failed to delete project's content
      tags: *ref_50
      security: *ref_51
  /v0/projects/{ref}/daily-stats:
    get:
      operationId: getDailyStats
      summary: Gets daily project stats
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: attribute
          required: true
          in: query
          schema:
            type: string
        - name: interval
          required: true
          in: query
          schema:
            type: string
        - name: endDate
          required: true
          in: query
          schema:
            type: string
        - name: startDate
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Failed to get daily project stats
      tags:
        - projects
      security:
        - bearer: []
  /v0/projects/{ref}/db-password:
    patch:
      operationId: updatePassword
      summary: Updates the database password
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordBody'
      responses:
        '200':
          description: ''
        '403':
          description: ''
        '500':
          description: Failed to update database password
      tags:
        - projects
      security:
        - bearer: []
  /v0/projects/{ref}/live:
    get:
      operationId: projectHealthCheck
      summary: Gets project health check
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
        '403':
          description: ''
        '500':
          description: Failed to get project health check
      tags:
        - projects
      security:
        - bearer: []
  /v0/projects/{ref}/api/rest:
    get:
      operationId: projectOpenApi
      summary: Gets project OpenApi
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
        '403':
          description: ''
        '500':
          description: Failed to get project OpenApi
      tags: &ref_52
        - projects
      security: &ref_53
        - bearer: []
  /v0/projects/{ref}/api/graphql:
    post:
      operationId: projectGraphql
      summary: Queries project Graphql
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: x-graphql-authorization
          required: true
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Buffer'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
        '403':
          description: ''
        '500':
          description: Failed to query project Graphql
      tags: *ref_52
      security: *ref_53
  /v0/projects/{ref}/infra-monitoring:
    get:
      operationId: getUsageMetrics
      summary: Gets project's usage metrics
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: attribute
          required: true
          in: query
          schema:
            enum:
              - cpu_usage
              - max_cpu_usage
              - avg_cpu_usage
              - disk_io_budget
              - disk_io_consumption
              - ram_usage
              - swap_usage
            type: string
        - name: startDate
          required: true
          in: query
          schema:
            type: string
        - name: endDate
          required: true
          in: query
          schema:
            type: string
        - name: interval
          required: false
          in: query
          schema:
            enum:
              - 1m
              - 5m
              - 10m
              - 30m
              - 1h
              - 1d
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Failed to get project's usage metrics
      tags:
        - projects
      security:
        - bearer: []
  /v0/projects/{ref}/invoices:
    head:
      operationId: getInvoiceCount
      summary: Gets project's invoice count
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
        '500':
          description: Failed to get project's invoice count
      tags: &ref_54
        - projects
      security: &ref_55
        - bearer: []
    get:
      operationId: getInvoices
      summary: Gets project's invoices
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: limit
          required: false
          in: query
          schema:
            type: string
        - name: offset
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '500':
          description: Failed to get project's invoices
      tags: *ref_54
      security: *ref_55
  /v0/projects/{ref}/pause:
    post:
      operationId: pauseProject
      summary: Pauses the project
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '201':
          description: ''
        '500':
          description: Failed to pause the project
      tags:
        - projects
      security:
        - bearer: []
  /v0/projects/{ref}/resize:
    post:
      operationId: resizeDatabase
      summary: Resize database disk
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResizeBody'
      responses:
        '201':
          description: ''
        '500':
          description: Failed to resize database disk
      tags:
        - projects
      security:
        - bearer: []
  /v0/projects/{ref}/restart:
    post:
      operationId: restartProject
      summary: Restarts project
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '201':
          description: ''
        '403':
          description: ''
        '500':
          description: Failed to restart project
      tags:
        - projects
      security:
        - bearer: []
  /v0/projects/{ref}:
    get:
      operationId: getProject
      summary: Gets a specific project that belongs to the authenticated user
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetailResponse'
      tags: &ref_56
        - projects
      security: &ref_57
        - bearer: []
    delete:
      operationId: deleteProject
      summary: Deletes the given project
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRefResponse'
        '403':
          description: ''
      tags: *ref_56
      security: *ref_57
    patch:
      operationId: updateProject
      summary: Updates the given project
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectBody'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRefResponse'
        '403':
          description: ''
        '500':
          description: Failed to update project
      tags: *ref_56
      security: *ref_57
  /v0/projects/{ref}/restore:
    post:
      operationId: restoreProject
      summary: Restores project
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreProjectBody'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestoreProjectInfo'
        '500':
          description: Failed to restore project
      tags:
        - projects
      security:
        - bearer: []
  /v0/projects/{ref}/restart-services:
    post:
      operationId: restartServices
      summary: Restarts given services
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestartServicesBody'
      responses:
        '201':
          description: ''
        '500':
          description: Failed to restart given services
      tags:
        - projects
      security:
        - bearer: []
  /v0/projects/{ref}/settings:
    get:
      operationId: getProjectApi
      summary: Gets project's settings
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSettingsResponse'
        '500':
          description: Failed to retrieve project's settings
      tags:
        - projects
      security:
        - bearer: []
  /v0/projects/{ref}/status:
    get:
      operationId: getProjectStatus
      summary: Gets project's status
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
        '500':
          description: Failed to get project's status
      tags:
        - projects
      security:
        - bearer: []
  /v0/projects/{ref}/usage:
    get:
      operationId: getUsageStatusConfig
      summary: Gets project's usage
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageStatusResponse'
        '500':
          description: Failed to retrieve project's usage
      tags:
        - projects
      security:
        - bearer: []
  /v0/projects/{ref}/analytics/endpoints/functions.inv-stats:
    get:
      operationId: getFunctionStatus
      summary: Gets a project's function invocation statistics
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: interval
          required: true
          in: query
          schema:
            enum:
              - 5min
              - 15min
              - 1hr
              - 1day
              - 7day
            type: string
        - name: function_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsResponse'
        '403':
          description: ''
        '500':
          description: Failed to get project's function invocation statistics
      tags:
        - projects analytics
      security:
        - bearer: []
  /v0/projects/{ref}/analytics/endpoints/logs.all:
    get:
      operationId: getApiPaths
      summary: Gets project's logs
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: sql
          required: true
          in: query
          schema:
            type: string
        - name: project
          required: true
          in: query
          schema:
            type: string
        - name: iso_timestamp_start
          required: true
          in: query
          schema:
            type: string
        - name: iso_timestamp_end
          required: true
          in: query
          schema:
            type: string
        - name: timestamp_start
          required: true
          in: query
          schema:
            type: string
        - name: timestamp_end
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsResponse'
        '403':
          description: ''
        '500':
          description: Failed to get project's logs
      tags:
        - projects analytics
      security:
        - bearer: []
  /v0/projects/{ref}/analytics/endpoints/usage.api-counts:
    get:
      operationId: getApiCounts
      summary: Gets project's usage api counts
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
        - name: interval
          required: true
          in: query
          schema:
            enum:
              - minutely
              - hourly
              - daily
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsResponse'
        '403':
          description: ''
        '500':
          description: Failed to get project's usage api counts
      tags:
        - projects analytics
      security:
        - bearer: []
  /v0/projects/{ref}/config/pgbouncer:
    get:
      operationId: getPgbouncerConfig
      summary: Gets project's pgbouncer config
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PgbouncerConfigResponse'
        '500':
          description: Failed to retrieve project's pgbouncer config
      tags: &ref_58
        - projects config
      security: &ref_59
        - bearer: []
    patch:
      operationId: updatePgbouncerConfig
      summary: Updates project's pgbouncer config
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePgbouncerConfigBody'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePoolingConfigResponse'
        '403':
          description: ''
        '500':
          description: Failed to update project's pgbouncer config
      tags: *ref_58
      security: *ref_59
  /v0/projects/{ref}/config/postgrest:
    get:
      operationId: getPostgRESTConfig
      summary: Gets project's postgrest config
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgrestConfigResponse'
        '403':
          description: ''
        '500':
          description: Failed to retrieve project's postgrest config
      tags: &ref_60
        - projects config
      security: &ref_61
        - bearer: []
    patch:
      operationId: updatePostgRESTConfig
      summary: Updates project's postgrest config
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePostgrestConfigBody'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgrestConfigResponse'
        '403':
          description: ''
        '500':
          description: Failed to update project's postgrest config
      tags: *ref_60
      security: *ref_61
  /v0/projects/{ref}/config/postgres:
    get:
      operationId: getConfig
      summary: Gets project's Postgres config
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresConfigResponse'
        '500':
          description: Failed to retrieve project's Postgres config
      tags: &ref_62
        - projects config
      security: &ref_63
        - bearer: []
    put:
      operationId: updateConfig
      summary: Updates project's Postgres config
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePostgresConfigBody'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresConfigResponse'
        '500':
          description: Failed to update project's Postgres config
      tags: *ref_62
      security: *ref_63
  /v0/projects/{ref}/config/secrets:
    patch:
      operationId: updateConfig
      summary: Updates project's secrets config
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSecretsConfigBody'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSecretsResponse'
        '500':
          description: Failed to update project's secrets config
      tags:
        - projects config
      security:
        - bearer: []
  /v0/projects/{ref}/config/storage:
    get:
      operationId: getStorageConfig
      summary: Gets project's storage config
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageConfigResponse'
        '403':
          description: ''
        '500':
          description: Failed to retrieve project's storage config
      tags: &ref_64
        - projects config
      security: &ref_65
        - bearer: []
    patch:
      operationId: updateConfig
      summary: Updates project's storage config
      parameters:
        - name: ref
          required: true
          in: path
          description: Project ref
          schema:
            minLength: 20
            maxLength: 20
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStorageConfigBody'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStorageConfigResponse'
        '403':
          description: ''
        '500':
          description: Failed to update project's storage config
      tags: *ref_64
      security: *ref_65
info:
  title: Supabase Experimental API
  description: >-
    Endpoints are available at "https://api.supabase.io/v0". Please note that we
    expect the endpoint definitions to change.
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    GetGoTrueConfigResponse:
      type: object
      properties:
        SITE_URL:
          type: string
        DISABLE_SIGNUP:
          type: boolean
        JWT_EXP:
          type: number
        SMTP_ADMIN_EMAIL:
          type: string
        SMTP_HOST:
          type: string
        SMTP_PORT:
          type: string
        SMTP_USER:
          type: string
        SMTP_PASS:
          type: string
          nullable: true
        SMTP_PASS_ENCRYPTED:
          type: string
          nullable: true
        SMTP_MAX_FREQUENCY:
          type: number
        SMTP_SENDER_NAME:
          type: string
        MAILER_AUTOCONFIRM:
          type: boolean
        MAILER_SUBJECTS_INVITE:
          type: string
        MAILER_SUBJECTS_CONFIRMATION:
          type: string
        MAILER_SUBJECTS_RECOVERY:
          type: string
        MAILER_SUBJECTS_EMAIL_CHANGE:
          type: string
        MAILER_SUBJECTS_MAGIC_LINK:
          type: string
        MAILER_TEMPLATES_INVITE_CONTENT:
          type: string
        MAILER_TEMPLATES_CONFIRMATION_CONTENT:
          type: string
        MAILER_TEMPLATES_RECOVERY_CONTENT:
          type: string
        MAILER_TEMPLATES_EMAIL_CHANGE_CONTENT:
          type: string
        MAILER_TEMPLATES_MAGIC_LINK_CONTENT:
          type: string
        MFA_MAX_ENROLLED_FACTORS:
          type: number
        URI_ALLOW_LIST:
          type: string
        EXTERNAL_EMAIL_ENABLED:
          type: boolean
        EXTERNAL_PHONE_ENABLED:
          type: boolean
        SAML_ENABLED:
          type: boolean
        SECURITY_CAPTCHA_ENABLED:
          type: boolean
        SECURITY_CAPTCHA_PROVIDER:
          type: string
        SECURITY_CAPTCHA_SECRET:
          type: string
        RATE_LIMIT_EMAIL_SENT:
          type: number
        RATE_LIMIT_SMS_SENT:
          type: number
        MAILER_SECURE_EMAIL_CHANGE_ENABLED:
          type: boolean
        REFRESH_TOKEN_ROTATION_ENABLED:
          type: boolean
        PASSWORD_MIN_LENGTH:
          type: number
        SECURITY_UPDATE_PASSWORD_REQUIRE_REAUTHENTICATION:
          type: boolean
        SECURITY_REFRESH_TOKEN_REUSE_INTERVAL:
          type: number
        MAILER_OTP_EXP:
          type: number
        SMS_AUTOCONFIRM:
          type: boolean
        SMS_MAX_FREQUENCY:
          type: number
        SMS_OTP_EXP:
          type: number
        SMS_OTP_LENGTH:
          type: number
        SMS_PROVIDER:
          type: string
        SMS_MESSAGEBIRD_ACCESS_KEY:
          type: string
        SMS_MESSAGEBIRD_ORIGINATOR:
          type: string
        SMS_TEXTLOCAL_API_KEY:
          type: string
        SMS_TEXTLOCAL_SENDER:
          type: string
        SMS_TWILIO_ACCOUNT_SID:
          type: string
        SMS_TWILIO_AUTH_TOKEN:
          type: string
        SMS_TWILIO_MESSAGE_SERVICE_SID:
          type: string
        SMS_TWILIO_VERIFY_ACCOUNT_SID:
          type: string
        SMS_TWILIO_VERIFY_AUTH_TOKEN:
          type: string
        SMS_TWILIO_VERIFY_MESSAGE_SERVICE_SID:
          type: string
        SMS_VONAGE_API_KEY:
          type: string
        SMS_VONAGE_API_SECRET:
          type: string
        SMS_VONAGE_FROM:
          type: string
        SMS_TEMPLATE:
          type: string
        SMS_TEST_OTP:
          type: string
        SMS_TEST_OTP_VALID_UNTIL:
          type: string
        EXTERNAL_APPLE_ENABLED:
          type: boolean
        EXTERNAL_APPLE_CLIENT_ID:
          type: string
        EXTERNAL_APPLE_SECRET:
          type: string
        EXTERNAL_APPLE_ADDITIONAL_CLIENT_IDS:
          type: string
        EXTERNAL_AZURE_ENABLED:
          type: boolean
        EXTERNAL_AZURE_CLIENT_ID:
          type: string
        EXTERNAL_AZURE_SECRET:
          type: string
        EXTERNAL_AZURE_URL:
          type: string
        EXTERNAL_BITBUCKET_ENABLED:
          type: boolean
        EXTERNAL_BITBUCKET_CLIENT_ID:
          type: string
        EXTERNAL_BITBUCKET_SECRET:
          type: string
        EXTERNAL_DISCORD_ENABLED:
          type: boolean
        EXTERNAL_DISCORD_CLIENT_ID:
          type: string
        EXTERNAL_DISCORD_SECRET:
          type: string
        EXTERNAL_FACEBOOK_ENABLED:
          type: boolean
        EXTERNAL_FACEBOOK_CLIENT_ID:
          type: string
        EXTERNAL_FACEBOOK_SECRET:
          type: string
        EXTERNAL_FIGMA_ENABLED:
          type: boolean
        EXTERNAL_FIGMA_CLIENT_ID:
          type: string
        EXTERNAL_FIGMA_SECRET:
          type: string
        EXTERNAL_GITHUB_ENABLED:
          type: boolean
        EXTERNAL_GITHUB_CLIENT_ID:
          type: string
        EXTERNAL_GITHUB_SECRET:
          type: string
        EXTERNAL_GITLAB_ENABLED:
          type: boolean
        EXTERNAL_GITLAB_CLIENT_ID:
          type: string
        EXTERNAL_GITLAB_SECRET:
          type: string
        EXTERNAL_GITLAB_URL:
          type: string
        EXTERNAL_GOOGLE_ENABLED:
          type: boolean
        EXTERNAL_GOOGLE_CLIENT_ID:
          type: string
        EXTERNAL_GOOGLE_SECRET:
          type: string
        EXTERNAL_GOOGLE_ADDITIONAL_CLIENT_IDS:
          type: string
        EXTERNAL_KAKAO_ENABLED:
          type: boolean
        EXTERNAL_KAKAO_CLIENT_ID:
          type: string
        EXTERNAL_KAKAO_SECRET:
          type: string
        EXTERNAL_KEYCLOAK_ENABLED:
          type: boolean
        EXTERNAL_KEYCLOAK_CLIENT_ID:
          type: string
        EXTERNAL_KEYCLOAK_SECRET:
          type: string
        EXTERNAL_KEYCLOAK_URL:
          type: string
        EXTERNAL_LINKEDIN_ENABLED:
          type: boolean
        EXTERNAL_LINKEDIN_CLIENT_ID:
          type: string
        EXTERNAL_LINKEDIN_SECRET:
          type: string
        EXTERNAL_NOTION_ENABLED:
          type: boolean
        EXTERNAL_NOTION_CLIENT_ID:
          type: string
        EXTERNAL_NOTION_SECRET:
          type: string
        EXTERNAL_SLACK_ENABLED:
          type: boolean
        EXTERNAL_SLACK_CLIENT_ID:
          type: string
        EXTERNAL_SLACK_SECRET:
          type: string
        EXTERNAL_SPOTIFY_ENABLED:
          type: boolean
        EXTERNAL_SPOTIFY_CLIENT_ID:
          type: string
        EXTERNAL_SPOTIFY_SECRET:
          type: string
        EXTERNAL_TWITCH_ENABLED:
          type: boolean
        EXTERNAL_TWITCH_CLIENT_ID:
          type: string
        EXTERNAL_TWITCH_SECRET:
          type: string
        EXTERNAL_TWITTER_ENABLED:
          type: boolean
        EXTERNAL_TWITTER_CLIENT_ID:
          type: string
        EXTERNAL_TWITTER_SECRET:
          type: string
        EXTERNAL_WORKOS_ENABLED:
          type: boolean
        EXTERNAL_WORKOS_CLIENT_ID:
          type: string
        EXTERNAL_WORKOS_SECRET:
          type: string
        EXTERNAL_WORKOS_URL:
          type: string
        EXTERNAL_ZOOM_ENABLED:
          type: boolean
        EXTERNAL_ZOOM_CLIENT_ID:
          type: string
        EXTERNAL_ZOOM_SECRET:
          type: string
      required:
        - SITE_URL
        - DISABLE_SIGNUP
        - JWT_EXP
        - SMTP_ADMIN_EMAIL
        - SMTP_HOST
        - SMTP_PORT
        - SMTP_USER
        - SMTP_MAX_FREQUENCY
        - MAILER_AUTOCONFIRM
        - MAILER_SUBJECTS_INVITE
        - MAILER_SUBJECTS_CONFIRMATION
        - MAILER_SUBJECTS_RECOVERY
        - MAILER_SUBJECTS_EMAIL_CHANGE
        - MAILER_SUBJECTS_MAGIC_LINK
        - MAILER_TEMPLATES_INVITE_CONTENT
        - MAILER_TEMPLATES_CONFIRMATION_CONTENT
        - MAILER_TEMPLATES_RECOVERY_CONTENT
        - MAILER_TEMPLATES_EMAIL_CHANGE_CONTENT
        - MAILER_TEMPLATES_MAGIC_LINK_CONTENT
        - MFA_MAX_ENROLLED_FACTORS
        - URI_ALLOW_LIST
        - EXTERNAL_EMAIL_ENABLED
        - EXTERNAL_PHONE_ENABLED
        - SECURITY_CAPTCHA_ENABLED
        - SECURITY_CAPTCHA_PROVIDER
        - SECURITY_CAPTCHA_SECRET
        - RATE_LIMIT_EMAIL_SENT
        - RATE_LIMIT_SMS_SENT
        - MAILER_SECURE_EMAIL_CHANGE_ENABLED
        - REFRESH_TOKEN_ROTATION_ENABLED
        - PASSWORD_MIN_LENGTH
        - SECURITY_UPDATE_PASSWORD_REQUIRE_REAUTHENTICATION
        - SECURITY_REFRESH_TOKEN_REUSE_INTERVAL
        - MAILER_OTP_EXP
        - SMS_AUTOCONFIRM
        - SMS_MAX_FREQUENCY
        - SMS_OTP_EXP
        - SMS_OTP_LENGTH
        - SMS_PROVIDER
        - SMS_MESSAGEBIRD_ACCESS_KEY
        - SMS_MESSAGEBIRD_ORIGINATOR
        - SMS_TEXTLOCAL_API_KEY
        - SMS_TEXTLOCAL_SENDER
        - SMS_TWILIO_ACCOUNT_SID
        - SMS_TWILIO_AUTH_TOKEN
        - SMS_TWILIO_MESSAGE_SERVICE_SID
        - SMS_TWILIO_VERIFY_ACCOUNT_SID
        - SMS_TWILIO_VERIFY_AUTH_TOKEN
        - SMS_TWILIO_VERIFY_MESSAGE_SERVICE_SID
        - SMS_VONAGE_API_KEY
        - SMS_VONAGE_API_SECRET
        - SMS_VONAGE_FROM
        - SMS_TEMPLATE
        - SMS_TEST_OTP
        - SMS_TEST_OTP_VALID_UNTIL
        - EXTERNAL_APPLE_ENABLED
        - EXTERNAL_APPLE_CLIENT_ID
        - EXTERNAL_APPLE_SECRET
        - EXTERNAL_AZURE_ENABLED
        - EXTERNAL_AZURE_CLIENT_ID
        - EXTERNAL_AZURE_SECRET
        - EXTERNAL_AZURE_URL
        - EXTERNAL_BITBUCKET_ENABLED
        - EXTERNAL_BITBUCKET_CLIENT_ID
        - EXTERNAL_BITBUCKET_SECRET
        - EXTERNAL_DISCORD_ENABLED
        - EXTERNAL_DISCORD_CLIENT_ID
        - EXTERNAL_DISCORD_SECRET
        - EXTERNAL_FACEBOOK_ENABLED
        - EXTERNAL_FACEBOOK_CLIENT_ID
        - EXTERNAL_FACEBOOK_SECRET
        - EXTERNAL_FIGMA_ENABLED
        - EXTERNAL_FIGMA_CLIENT_ID
        - EXTERNAL_FIGMA_SECRET
        - EXTERNAL_GITHUB_ENABLED
        - EXTERNAL_GITHUB_CLIENT_ID
        - EXTERNAL_GITHUB_SECRET
        - EXTERNAL_GITLAB_ENABLED
        - EXTERNAL_GITLAB_CLIENT_ID
        - EXTERNAL_GITLAB_SECRET
        - EXTERNAL_GITLAB_URL
        - EXTERNAL_GOOGLE_ENABLED
        - EXTERNAL_GOOGLE_CLIENT_ID
        - EXTERNAL_GOOGLE_SECRET
        - EXTERNAL_KAKAO_ENABLED
        - EXTERNAL_KAKAO_CLIENT_ID
        - EXTERNAL_KAKAO_SECRET
        - EXTERNAL_KEYCLOAK_ENABLED
        - EXTERNAL_KEYCLOAK_CLIENT_ID
        - EXTERNAL_KEYCLOAK_SECRET
        - EXTERNAL_KEYCLOAK_URL
        - EXTERNAL_LINKEDIN_ENABLED
        - EXTERNAL_LINKEDIN_CLIENT_ID
        - EXTERNAL_LINKEDIN_SECRET
        - EXTERNAL_NOTION_ENABLED
        - EXTERNAL_NOTION_CLIENT_ID
        - EXTERNAL_NOTION_SECRET
        - EXTERNAL_SLACK_ENABLED
        - EXTERNAL_SLACK_CLIENT_ID
        - EXTERNAL_SLACK_SECRET
        - EXTERNAL_SPOTIFY_ENABLED
        - EXTERNAL_SPOTIFY_CLIENT_ID
        - EXTERNAL_SPOTIFY_SECRET
        - EXTERNAL_TWITCH_ENABLED
        - EXTERNAL_TWITCH_CLIENT_ID
        - EXTERNAL_TWITCH_SECRET
        - EXTERNAL_TWITTER_ENABLED
        - EXTERNAL_TWITTER_CLIENT_ID
        - EXTERNAL_TWITTER_SECRET
        - EXTERNAL_WORKOS_ENABLED
        - EXTERNAL_WORKOS_CLIENT_ID
        - EXTERNAL_WORKOS_SECRET
        - EXTERNAL_WORKOS_URL
        - EXTERNAL_ZOOM_ENABLED
        - EXTERNAL_ZOOM_CLIENT_ID
        - EXTERNAL_ZOOM_SECRET
    UpdateGoTrueConfigBody:
      type: object
      properties:
        SITE_URL:
          type: string
          pattern: /^[^,]+$/
        DISABLE_SIGNUP:
          type: boolean
        JWT_EXP:
          type: number
          minimum: 0
          maximum: 604800
        SMTP_ADMIN_EMAIL:
          type: string
        SMTP_HOST:
          type: string
        SMTP_PORT:
          type: string
        SMTP_USER:
          type: string
        SMTP_PASS:
          type: string
          nullable: true
        SMTP_PASS_ENCRYPTED:
          type: string
          nullable: true
        SMTP_MAX_FREQUENCY:
          type: number
        SMTP_SENDER_NAME:
          type: string
        MAILER_AUTOCONFIRM:
          type: boolean
        MAILER_SUBJECTS_INVITE:
          type: string
        MAILER_SUBJECTS_CONFIRMATION:
          type: string
        MAILER_SUBJECTS_RECOVERY:
          type: string
        MAILER_SUBJECTS_EMAIL_CHANGE:
          type: string
        MAILER_SUBJECTS_MAGIC_LINK:
          type: string
        MAILER_TEMPLATES_INVITE_CONTENT:
          type: string
        MAILER_TEMPLATES_CONFIRMATION_CONTENT:
          type: string
        MAILER_TEMPLATES_RECOVERY_CONTENT:
          type: string
        MAILER_TEMPLATES_EMAIL_CHANGE_CONTENT:
          type: string
        MAILER_TEMPLATES_MAGIC_LINK_CONTENT:
          type: string
        MFA_MAX_ENROLLED_FACTORS:
          type: number
        URI_ALLOW_LIST:
          type: string
        EXTERNAL_EMAIL_ENABLED:
          type: boolean
        EXTERNAL_PHONE_ENABLED:
          type: boolean
        SAML_ENABLED:
          type: boolean
        SECURITY_CAPTCHA_ENABLED:
          type: boolean
        SECURITY_CAPTCHA_PROVIDER:
          type: string
        SECURITY_CAPTCHA_SECRET:
          type: string
        RATE_LIMIT_EMAIL_SENT:
          type: number
          minimum: 1
          maximum: 2147483647
        RATE_LIMIT_SMS_SENT:
          type: number
          minimum: 1
          maximum: 2147483647
        MAILER_SECURE_EMAIL_CHANGE_ENABLED:
          type: boolean
        REFRESH_TOKEN_ROTATION_ENABLED:
          type: boolean
        PASSWORD_MIN_LENGTH:
          type: number
          minimum: 6
          maximum: 10
        SECURITY_UPDATE_PASSWORD_REQUIRE_REAUTHENTICATION:
          type: boolean
        SECURITY_REFRESH_TOKEN_REUSE_INTERVAL:
          type: number
        MAILER_OTP_EXP:
          type: number
        SMS_AUTOCONFIRM:
          type: boolean
        SMS_MAX_FREQUENCY:
          type: number
        SMS_OTP_EXP:
          type: number
        SMS_OTP_LENGTH:
          type: number
        SMS_PROVIDER:
          type: string
        SMS_MESSAGEBIRD_ACCESS_KEY:
          type: string
        SMS_MESSAGEBIRD_ORIGINATOR:
          type: string
        SMS_TEST_OTP:
          type: string
          pattern: /^([0-9]{1,15}=[0-9]+,?)*$/
        SMS_TEST_OTP_VALID_UNTIL:
          type: string
        SMS_TEXTLOCAL_API_KEY:
          type: string
        SMS_TEXTLOCAL_SENDER:
          type: string
        SMS_TWILIO_ACCOUNT_SID:
          type: string
        SMS_TWILIO_AUTH_TOKEN:
          type: string
        SMS_TWILIO_MESSAGE_SERVICE_SID:
          type: string
        SMS_TWILIO_VERIFY_ACCOUNT_SID:
          type: string
        SMS_TWILIO_VERIFY_AUTH_TOKEN:
          type: string
        SMS_TWILIO_VERIFY_MESSAGE_SERVICE_SID:
          type: string
        SMS_VONAGE_API_KEY:
          type: string
        SMS_VONAGE_API_SECRET:
          type: string
        SMS_VONAGE_FROM:
          type: string
        SMS_TEMPLATE:
          type: string
        EXTERNAL_APPLE_ENABLED:
          type: boolean
        EXTERNAL_APPLE_CLIENT_ID:
          type: string
        EXTERNAL_APPLE_SECRET:
          type: string
        EXTERNAL_APPLE_ADDITIONAL_CLIENT_IDS:
          type: string
        EXTERNAL_AZURE_ENABLED:
          type: boolean
        EXTERNAL_AZURE_CLIENT_ID:
          type: string
        EXTERNAL_AZURE_SECRET:
          type: string
        EXTERNAL_AZURE_URL:
          type: string
        EXTERNAL_BITBUCKET_ENABLED:
          type: boolean
        EXTERNAL_BITBUCKET_CLIENT_ID:
          type: string
        EXTERNAL_BITBUCKET_SECRET:
          type: string
        EXTERNAL_DISCORD_ENABLED:
          type: boolean
        EXTERNAL_DISCORD_CLIENT_ID:
          type: string
        EXTERNAL_DISCORD_SECRET:
          type: string
        EXTERNAL_FACEBOOK_ENABLED:
          type: boolean
        EXTERNAL_FACEBOOK_CLIENT_ID:
          type: string
        EXTERNAL_FACEBOOK_SECRET:
          type: string
        EXTERNAL_FIGMA_ENABLED:
          type: boolean
        EXTERNAL_FIGMA_CLIENT_ID:
          type: string
        EXTERNAL_FIGMA_SECRET:
          type: string
        EXTERNAL_GITHUB_ENABLED:
          type: boolean
        EXTERNAL_GITHUB_CLIENT_ID:
          type: string
        EXTERNAL_GITHUB_SECRET:
          type: string
        EXTERNAL_GITLAB_ENABLED:
          type: boolean
        EXTERNAL_GITLAB_CLIENT_ID:
          type: string
        EXTERNAL_GITLAB_SECRET:
          type: string
        EXTERNAL_GITLAB_URL:
          type: string
        EXTERNAL_GOOGLE_ENABLED:
          type: boolean
        EXTERNAL_GOOGLE_CLIENT_ID:
          type: string
        EXTERNAL_GOOGLE_SECRET:
          type: string
        EXTERNAL_GOOGLE_ADDITIONAL_CLIENT_IDS:
          type: string
        EXTERNAL_KAKAO_ENABLED:
          type: boolean
        EXTERNAL_KAKAO_CLIENT_ID:
          type: string
        EXTERNAL_KAKAO_SECRET:
          type: string
        EXTERNAL_KEYCLOAK_ENABLED:
          type: boolean
        EXTERNAL_KEYCLOAK_CLIENT_ID:
          type: string
        EXTERNAL_KEYCLOAK_SECRET:
          type: string
        EXTERNAL_KEYCLOAK_URL:
          type: string
        EXTERNAL_LINKEDIN_ENABLED:
          type: boolean
        EXTERNAL_LINKEDIN_CLIENT_ID:
          type: string
        EXTERNAL_LINKEDIN_SECRET:
          type: string
        EXTERNAL_NOTION_ENABLED:
          type: boolean
        EXTERNAL_NOTION_CLIENT_ID:
          type: string
        EXTERNAL_NOTION_SECRET:
          type: string
        EXTERNAL_SLACK_ENABLED:
          type: boolean
        EXTERNAL_SLACK_CLIENT_ID:
          type: string
        EXTERNAL_SLACK_SECRET:
          type: string
        EXTERNAL_SPOTIFY_ENABLED:
          type: boolean
        EXTERNAL_SPOTIFY_CLIENT_ID:
          type: string
        EXTERNAL_SPOTIFY_SECRET:
          type: string
        EXTERNAL_TWITCH_ENABLED:
          type: boolean
        EXTERNAL_TWITCH_CLIENT_ID:
          type: string
        EXTERNAL_TWITCH_SECRET:
          type: string
        EXTERNAL_TWITTER_ENABLED:
          type: boolean
        EXTERNAL_TWITTER_CLIENT_ID:
          type: string
        EXTERNAL_TWITTER_SECRET:
          type: string
        EXTERNAL_WORKOS_ENABLED:
          type: boolean
        EXTERNAL_WORKOS_CLIENT_ID:
          type: string
        EXTERNAL_WORKOS_SECRET:
          type: string
        EXTERNAL_WORKOS_URL:
          type: string
        EXTERNAL_ZOOM_ENABLED:
          type: boolean
        EXTERNAL_ZOOM_CLIENT_ID:
          type: string
        EXTERNAL_ZOOM_SECRET:
          type: string
    GoTrueConfig:
      type: object
      properties:
        SITE_URL:
          type: string
        DISABLE_SIGNUP:
          type: boolean
        JWT_EXP:
          type: number
        SMTP_ADMIN_EMAIL:
          type: string
        SMTP_HOST:
          type: string
        SMTP_PORT:
          type: string
        SMTP_USER:
          type: string
        SMTP_PASS:
          type: string
          nullable: true
        SMTP_PASS_ENCRYPTED:
          type: string
          nullable: true
        SMTP_MAX_FREQUENCY:
          type: number
        SMTP_SENDER_NAME:
          type: string
        MAILER_AUTOCONFIRM:
          type: boolean
        MAILER_SUBJECTS_INVITE:
          type: string
        MAILER_SUBJECTS_CONFIRMATION:
          type: string
        MAILER_SUBJECTS_RECOVERY:
          type: string
        MAILER_SUBJECTS_EMAIL_CHANGE:
          type: string
        MAILER_SUBJECTS_MAGIC_LINK:
          type: string
        MAILER_TEMPLATES_INVITE_CONTENT:
          type: string
        MAILER_TEMPLATES_CONFIRMATION_CONTENT:
          type: string
        MAILER_TEMPLATES_RECOVERY_CONTENT:
          type: string
        MAILER_TEMPLATES_EMAIL_CHANGE_CONTENT:
          type: string
        MAILER_TEMPLATES_MAGIC_LINK_CONTENT:
          type: string
        MFA_MAX_ENROLLED_FACTORS:
          type: number
        URI_ALLOW_LIST:
          type: string
        EXTERNAL_EMAIL_ENABLED:
          type: boolean
        EXTERNAL_PHONE_ENABLED:
          type: boolean
        SAML_ENABLED:
          type: boolean
        SECURITY_CAPTCHA_ENABLED:
          type: boolean
        SECURITY_CAPTCHA_PROVIDER:
          type: string
        SECURITY_CAPTCHA_SECRET:
          type: string
        RATE_LIMIT_EMAIL_SENT:
          type: number
        RATE_LIMIT_SMS_SENT:
          type: number
        MAILER_SECURE_EMAIL_CHANGE_ENABLED:
          type: boolean
        REFRESH_TOKEN_ROTATION_ENABLED:
          type: boolean
        PASSWORD_MIN_LENGTH:
          type: number
        SECURITY_UPDATE_PASSWORD_REQUIRE_REAUTHENTICATION:
          type: boolean
        SECURITY_REFRESH_TOKEN_REUSE_INTERVAL:
          type: number
        MAILER_OTP_EXP:
          type: number
        SMS_AUTOCONFIRM:
          type: boolean
        SMS_MAX_FREQUENCY:
          type: number
        SMS_OTP_EXP:
          type: number
        SMS_OTP_LENGTH:
          type: number
        SMS_PROVIDER:
          type: string
        SMS_MESSAGEBIRD_ACCESS_KEY:
          type: string
        SMS_MESSAGEBIRD_ORIGINATOR:
          type: string
        SMS_TEXTLOCAL_API_KEY:
          type: string
        SMS_TEXTLOCAL_SENDER:
          type: string
        SMS_TWILIO_ACCOUNT_SID:
          type: string
        SMS_TWILIO_AUTH_TOKEN:
          type: string
        SMS_TWILIO_MESSAGE_SERVICE_SID:
          type: string
        SMS_TWILIO_VERIFY_ACCOUNT_SID:
          type: string
        SMS_TWILIO_VERIFY_AUTH_TOKEN:
          type: string
        SMS_TWILIO_VERIFY_MESSAGE_SERVICE_SID:
          type: string
        SMS_VONAGE_API_KEY:
          type: string
        SMS_VONAGE_API_SECRET:
          type: string
        SMS_VONAGE_FROM:
          type: string
        SMS_TEMPLATE:
          type: string
        SMS_TEST_OTP:
          type: string
        SMS_TEST_OTP_VALID_UNTIL:
          type: string
        EXTERNAL_APPLE_ENABLED:
          type: boolean
        EXTERNAL_APPLE_CLIENT_ID:
          type: string
        EXTERNAL_APPLE_SECRET:
          type: string
        EXTERNAL_APPLE_ADDITIONAL_CLIENT_IDS:
          type: string
        EXTERNAL_AZURE_ENABLED:
          type: boolean
        EXTERNAL_AZURE_CLIENT_ID:
          type: string
        EXTERNAL_AZURE_SECRET:
          type: string
        EXTERNAL_AZURE_URL:
          type: string
        EXTERNAL_BITBUCKET_ENABLED:
          type: boolean
        EXTERNAL_BITBUCKET_CLIENT_ID:
          type: string
        EXTERNAL_BITBUCKET_SECRET:
          type: string
        EXTERNAL_DISCORD_ENABLED:
          type: boolean
        EXTERNAL_DISCORD_CLIENT_ID:
          type: string
        EXTERNAL_DISCORD_SECRET:
          type: string
        EXTERNAL_FACEBOOK_ENABLED:
          type: boolean
        EXTERNAL_FACEBOOK_CLIENT_ID:
          type: string
        EXTERNAL_FACEBOOK_SECRET:
          type: string
        EXTERNAL_FIGMA_ENABLED:
          type: boolean
        EXTERNAL_FIGMA_CLIENT_ID:
          type: string
        EXTERNAL_FIGMA_SECRET:
          type: string
        EXTERNAL_GITHUB_ENABLED:
          type: boolean
        EXTERNAL_GITHUB_CLIENT_ID:
          type: string
        EXTERNAL_GITHUB_SECRET:
          type: string
        EXTERNAL_GITLAB_ENABLED:
          type: boolean
        EXTERNAL_GITLAB_CLIENT_ID:
          type: string
        EXTERNAL_GITLAB_SECRET:
          type: string
        EXTERNAL_GITLAB_URL:
          type: string
        EXTERNAL_GOOGLE_ENABLED:
          type: boolean
        EXTERNAL_GOOGLE_CLIENT_ID:
          type: string
        EXTERNAL_GOOGLE_SECRET:
          type: string
        EXTERNAL_GOOGLE_ADDITIONAL_CLIENT_IDS:
          type: string
        EXTERNAL_KAKAO_ENABLED:
          type: boolean
        EXTERNAL_KAKAO_CLIENT_ID:
          type: string
        EXTERNAL_KAKAO_SECRET:
          type: string
        EXTERNAL_KEYCLOAK_ENABLED:
          type: boolean
        EXTERNAL_KEYCLOAK_CLIENT_ID:
          type: string
        EXTERNAL_KEYCLOAK_SECRET:
          type: string
        EXTERNAL_KEYCLOAK_URL:
          type: string
        EXTERNAL_LINKEDIN_ENABLED:
          type: boolean
        EXTERNAL_LINKEDIN_CLIENT_ID:
          type: string
        EXTERNAL_LINKEDIN_SECRET:
          type: string
        EXTERNAL_NOTION_ENABLED:
          type: boolean
        EXTERNAL_NOTION_CLIENT_ID:
          type: string
        EXTERNAL_NOTION_SECRET:
          type: string
        EXTERNAL_SLACK_ENABLED:
          type: boolean
        EXTERNAL_SLACK_CLIENT_ID:
          type: string
        EXTERNAL_SLACK_SECRET:
          type: string
        EXTERNAL_SPOTIFY_ENABLED:
          type: boolean
        EXTERNAL_SPOTIFY_CLIENT_ID:
          type: string
        EXTERNAL_SPOTIFY_SECRET:
          type: string
        EXTERNAL_TWITCH_ENABLED:
          type: boolean
        EXTERNAL_TWITCH_CLIENT_ID:
          type: string
        EXTERNAL_TWITCH_SECRET:
          type: string
        EXTERNAL_TWITTER_ENABLED:
          type: boolean
        EXTERNAL_TWITTER_CLIENT_ID:
          type: string
        EXTERNAL_TWITTER_SECRET:
          type: string
        EXTERNAL_WORKOS_ENABLED:
          type: boolean
        EXTERNAL_WORKOS_CLIENT_ID:
          type: string
        EXTERNAL_WORKOS_SECRET:
          type: string
        EXTERNAL_WORKOS_URL:
          type: string
        EXTERNAL_ZOOM_ENABLED:
          type: boolean
        EXTERNAL_ZOOM_CLIENT_ID:
          type: string
        EXTERNAL_ZOOM_SECRET:
          type: string
      required:
        - SITE_URL
        - DISABLE_SIGNUP
        - JWT_EXP
        - SMTP_ADMIN_EMAIL
        - SMTP_HOST
        - SMTP_PORT
        - SMTP_USER
        - SMTP_MAX_FREQUENCY
        - MAILER_AUTOCONFIRM
        - MAILER_SUBJECTS_INVITE
        - MAILER_SUBJECTS_CONFIRMATION
        - MAILER_SUBJECTS_RECOVERY
        - MAILER_SUBJECTS_EMAIL_CHANGE
        - MAILER_SUBJECTS_MAGIC_LINK
        - MAILER_TEMPLATES_INVITE_CONTENT
        - MAILER_TEMPLATES_CONFIRMATION_CONTENT
        - MAILER_TEMPLATES_RECOVERY_CONTENT
        - MAILER_TEMPLATES_EMAIL_CHANGE_CONTENT
        - MAILER_TEMPLATES_MAGIC_LINK_CONTENT
        - MFA_MAX_ENROLLED_FACTORS
        - URI_ALLOW_LIST
        - EXTERNAL_EMAIL_ENABLED
        - EXTERNAL_PHONE_ENABLED
        - SECURITY_CAPTCHA_ENABLED
        - SECURITY_CAPTCHA_PROVIDER
        - SECURITY_CAPTCHA_SECRET
        - RATE_LIMIT_EMAIL_SENT
        - RATE_LIMIT_SMS_SENT
        - MAILER_SECURE_EMAIL_CHANGE_ENABLED
        - REFRESH_TOKEN_ROTATION_ENABLED
        - PASSWORD_MIN_LENGTH
        - SECURITY_UPDATE_PASSWORD_REQUIRE_REAUTHENTICATION
        - SECURITY_REFRESH_TOKEN_REUSE_INTERVAL
        - MAILER_OTP_EXP
        - SMS_AUTOCONFIRM
        - SMS_MAX_FREQUENCY
        - SMS_OTP_EXP
        - SMS_OTP_LENGTH
        - SMS_PROVIDER
        - SMS_MESSAGEBIRD_ACCESS_KEY
        - SMS_MESSAGEBIRD_ORIGINATOR
        - SMS_TEXTLOCAL_API_KEY
        - SMS_TEXTLOCAL_SENDER
        - SMS_TWILIO_ACCOUNT_SID
        - SMS_TWILIO_AUTH_TOKEN
        - SMS_TWILIO_MESSAGE_SERVICE_SID
        - SMS_TWILIO_VERIFY_ACCOUNT_SID
        - SMS_TWILIO_VERIFY_AUTH_TOKEN
        - SMS_TWILIO_VERIFY_MESSAGE_SERVICE_SID
        - SMS_VONAGE_API_KEY
        - SMS_VONAGE_API_SECRET
        - SMS_VONAGE_FROM
        - SMS_TEMPLATE
        - SMS_TEST_OTP
        - SMS_TEST_OTP_VALID_UNTIL
        - EXTERNAL_APPLE_ENABLED
        - EXTERNAL_APPLE_CLIENT_ID
        - EXTERNAL_APPLE_SECRET
        - EXTERNAL_AZURE_ENABLED
        - EXTERNAL_AZURE_CLIENT_ID
        - EXTERNAL_AZURE_SECRET
        - EXTERNAL_AZURE_URL
        - EXTERNAL_BITBUCKET_ENABLED
        - EXTERNAL_BITBUCKET_CLIENT_ID
        - EXTERNAL_BITBUCKET_SECRET
        - EXTERNAL_DISCORD_ENABLED
        - EXTERNAL_DISCORD_CLIENT_ID
        - EXTERNAL_DISCORD_SECRET
        - EXTERNAL_FACEBOOK_ENABLED
        - EXTERNAL_FACEBOOK_CLIENT_ID
        - EXTERNAL_FACEBOOK_SECRET
        - EXTERNAL_FIGMA_ENABLED
        - EXTERNAL_FIGMA_CLIENT_ID
        - EXTERNAL_FIGMA_SECRET
        - EXTERNAL_GITHUB_ENABLED
        - EXTERNAL_GITHUB_CLIENT_ID
        - EXTERNAL_GITHUB_SECRET
        - EXTERNAL_GITLAB_ENABLED
        - EXTERNAL_GITLAB_CLIENT_ID
        - EXTERNAL_GITLAB_SECRET
        - EXTERNAL_GITLAB_URL
        - EXTERNAL_GOOGLE_ENABLED
        - EXTERNAL_GOOGLE_CLIENT_ID
        - EXTERNAL_GOOGLE_SECRET
        - EXTERNAL_KAKAO_ENABLED
        - EXTERNAL_KAKAO_CLIENT_ID
        - EXTERNAL_KAKAO_SECRET
        - EXTERNAL_KEYCLOAK_ENABLED
        - EXTERNAL_KEYCLOAK_CLIENT_ID
        - EXTERNAL_KEYCLOAK_SECRET
        - EXTERNAL_KEYCLOAK_URL
        - EXTERNAL_LINKEDIN_ENABLED
        - EXTERNAL_LINKEDIN_CLIENT_ID
        - EXTERNAL_LINKEDIN_SECRET
        - EXTERNAL_NOTION_ENABLED
        - EXTERNAL_NOTION_CLIENT_ID
        - EXTERNAL_NOTION_SECRET
        - EXTERNAL_SLACK_ENABLED
        - EXTERNAL_SLACK_CLIENT_ID
        - EXTERNAL_SLACK_SECRET
        - EXTERNAL_SPOTIFY_ENABLED
        - EXTERNAL_SPOTIFY_CLIENT_ID
        - EXTERNAL_SPOTIFY_SECRET
        - EXTERNAL_TWITCH_ENABLED
        - EXTERNAL_TWITCH_CLIENT_ID
        - EXTERNAL_TWITCH_SECRET
        - EXTERNAL_TWITTER_ENABLED
        - EXTERNAL_TWITTER_CLIENT_ID
        - EXTERNAL_TWITTER_SECRET
        - EXTERNAL_WORKOS_ENABLED
        - EXTERNAL_WORKOS_CLIENT_ID
        - EXTERNAL_WORKOS_SECRET
        - EXTERNAL_WORKOS_URL
        - EXTERNAL_ZOOM_ENABLED
        - EXTERNAL_ZOOM_CLIENT_ID
        - EXTERNAL_ZOOM_SECRET
    UserBody:
      type: object
      properties:
        id:
          type: string
        aud:
          type: string
        banned_until:
          type: string
        confirmation_sent_at:
          type: string
        confirmation_token:
          type: string
        confirmed_at:
          type: string
        created_at:
          type: string
        email:
          type: string
        email_change:
          type: string
        email_change_confirm_status:
          type: number
        email_change_sent_at:
          type: string
        email_change_token_current:
          type: string
        email_change_token_new:
          type: string
        email_confirmed_at:
          type: string
        encrypted_password:
          type: string
        instance_id:
          type: string
        invited_at:
          type: string
        is_super_admin:
          type: boolean
        last_sign_in_at:
          type: string
        phone:
          type: string
        phone_change:
          type: string
        phone_change_sent_at:
          type: string
        phone_change_token:
          type: string
        phone_confirmed_at:
          type: string
        raw_app_meta_data:
          type: object
        raw_user_meta_data:
          type: object
        reauthentication_sent_at:
          type: string
        reauthentication_token:
          type: string
        recovery_sent_at:
          type: string
        recovery_token:
          type: string
        role:
          type: string
        updated_at:
          type: string
        is_sso_user:
          type: boolean
        deleted_at:
          type: string
    UsersResponse:
      type: object
      properties:
        total:
          type: number
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserBody'
      required:
        - total
        - users
    Backup:
      type: object
      properties:
        id:
          type: number
        isPhysicalBackup:
          type: boolean
        project_id:
          type: number
        status:
          type: object
        inserted_at:
          type: string
      required:
        - id
        - isPhysicalBackup
        - project_id
        - status
        - inserted_at
    BackupsResponse:
      type: object
      properties:
        tierId:
          type: string
        tierKey:
          type: string
        region:
          type: string
        walg_enabled:
          type: boolean
        pitr_enabled:
          type: boolean
        backups:
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        physicalBackupData:
          type: object
          properties:
            earliestPhysicalBackupDateUnix:
              type: number
            latestPhysicalBackupDateUnix:
              type: number
      required:
        - tierId
        - tierKey
        - region
        - walg_enabled
        - pitr_enabled
        - backups
        - physicalBackupData
    DownloadBackupBody:
      type: object
      properties:
        id:
          type: number
        data:
          type: object
        inserted_at:
          type: string
        project_id:
          type: number
        s3_bucket:
          type: string
        s3_path:
          type: string
        status:
          type: string
      required:
        - id
        - data
        - inserted_at
        - project_id
        - s3_bucket
        - s3_path
        - status
    DownloadBackupResponse:
      type: object
      properties:
        fileUrl:
          type: string
      required:
        - fileUrl
    RestoreLogicalBackupBody:
      type: object
      properties:
        id:
          type: number
      required:
        - id
    RestorePhysicalBackupBody:
      type: object
      properties:
        id:
          type: number
        recovery_time_target:
          type: string
      required:
        - id
        - recovery_time_target
    PointInTimeRestoreBody:
      type: object
      properties:
        recovery_time_target_unix:
          type: number
      required:
        - recovery_time_target_unix
    OrganizationResponse:
      type: object
      properties:
        id:
          type: number
        slug:
          type: string
        name:
          type: string
        billing_email:
          type: string
        is_owner:
          type: boolean
        stripe_customer_id:
          type: string
        subscription_id:
          type: string
        opt_in_tags:
          type: array
          items:
            type: string
      required:
        - id
        - slug
        - name
        - billing_email
        - is_owner
        - stripe_customer_id
        - opt_in_tags
    CreateOrganizationBody:
      type: object
      properties:
        name:
          type: string
        kind:
          type: string
        size:
          type: string
      required:
        - name
        - kind
        - size
    CreateOrganizationBodyV2:
      type: object
      properties:
        name:
          type: string
        kind:
          type: string
        size:
          type: string
        tier:
          type: string
          enum:
            - tier_payg
            - tier_pro
            - tier_free
            - tier_team
            - tier_enterprise
        payment_method:
          type: string
      required:
        - name
        - tier
    ColumnPrivilege:
      type: object
      properties:
        grantor:
          type: string
        grantee:
          type: string
        privilege_type:
          type: string
          enum:
            - ALL
            - SELECT
            - INSERT
            - UPDATE
            - REFERENCES
        is_grantable:
          type: boolean
      required:
        - grantor
        - grantee
        - privilege_type
        - is_grantable
    PostgresColumnPrivileges:
      type: object
      properties:
        column_id:
          type: string
        relation_schema:
          type: string
        relation_name:
          type: string
        column_name:
          type: string
        privileges:
          type: array
          items:
            $ref: '#/components/schemas/ColumnPrivilege'
      required:
        - column_id
        - relation_schema
        - relation_name
        - column_name
        - privileges
    GrantColumnPrivilegesBody:
      type: object
      properties:
        is_grantable:
          type: boolean
        column_id:
          type: string
          pattern: /^\d+\.\d+$/
        grantee:
          type: string
        privilege_type:
          type: string
          enum:
            - ALL
            - SELECT
            - INSERT
            - UPDATE
            - REFERENCES
      required:
        - column_id
        - grantee
        - privilege_type
    RevokeColumnPrivilegesBody:
      type: object
      properties:
        column_id:
          type: string
          pattern: /^\d+\.\d+$/
        grantee:
          type: string
        privilege_type:
          type: string
          enum:
            - ALL
            - SELECT
            - INSERT
            - UPDATE
            - REFERENCES
      required:
        - column_id
        - grantee
        - privilege_type
    PostgresColumn:
      type: object
      properties:
        table_id:
          type: number
        schema:
          type: string
        table:
          type: string
        id:
          type: string
        ordinal_position:
          type: number
        name:
          type: string
        default_value:
          type: object
        data_type:
          type: string
        format:
          type: string
        is_identity:
          type: boolean
        identity_generation:
          type: object
        is_generated:
          type: boolean
        is_nullable:
          type: boolean
        is_updatable:
          type: boolean
        is_unique:
          type: boolean
        enums:
          type: array
          items:
            type: string
        check:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
      required:
        - table_id
        - schema
        - table
        - id
        - ordinal_position
        - name
        - default_value
        - data_type
        - format
        - is_identity
        - identity_generation
        - is_generated
        - is_nullable
        - is_updatable
        - is_unique
        - enums
        - check
        - comment
    CreateColumnBody:
      type: object
      properties:
        tableId:
          type: number
        name:
          type: string
        type:
          type: string
        check:
          type: string
        comment:
          type: string
        defaultValue:
          type: object
        defaultValueFormat:
          type: string
          enum:
            - expression
            - literal
        identityGeneration:
          type: string
          enum:
            - BY DEFAULT
            - ALWAYS
        isIdentity:
          type: boolean
        isNullable:
          type: boolean
        isPrimaryKey:
          type: boolean
        isUnique:
          type: boolean
      required:
        - tableId
        - name
        - type
    UpdateColumnBody:
      type: object
      properties:
        dropDefault:
          type: boolean
        name:
          type: string
        type:
          type: string
        id:
          type: number
          pattern: COLUMN_ID_REGEXP
        check:
          type: string
        comment:
          type: string
        defaultValue:
          type: object
        defaultValueFormat:
          type: string
          enum:
            - expression
            - literal
        identityGeneration:
          type: string
          enum:
            - BY DEFAULT
            - ALWAYS
        isIdentity:
          type: boolean
        isNullable:
          type: boolean
        isUnique:
          type: boolean
    PostgresExtension:
      type: object
      properties:
        name:
          type: string
        schema:
          type: string
          nullable: true
        default_version:
          type: string
        installed_version:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
      required:
        - name
        - schema
        - default_version
        - installed_version
        - comment
    CreateExtensionBody:
      type: object
      properties:
        cascade:
          type: boolean
        name:
          type: string
        schema:
          type: string
        version:
          type: string
      required:
        - cascade
        - name
        - schema
        - version
    PostgresForeignTable:
      type: object
      properties:
        id:
          type: number
        schema:
          type: string
        name:
          type: string
        comment:
          type: string
          nullable: true
        columns:
          type: array
          items:
            $ref: '#/components/schemas/PostgresColumn'
      required:
        - id
        - schema
        - name
        - comment
    PostgresFunction:
      type: object
      properties:
        id:
          type: number
        schema:
          type: string
        name:
          type: string
        language:
          type: string
        definition:
          type: string
        complete_statement:
          type: string
        argument_types:
          type: string
        identity_argument_types:
          type: string
        return_type:
          type: string
        behavior:
          enum:
            - VOLATILE
            - STABLE
            - IMMUTABLE
          type: string
        security_definer:
          type: boolean
        config_params:
          type: object
          nullable: true
      required:
        - id
        - schema
        - name
        - language
        - definition
        - complete_statement
        - argument_types
        - identity_argument_types
        - return_type
        - behavior
        - security_definer
        - config_params
    CreateFunctionBody:
      type: object
      properties:
        args:
          type: array
          items:
            type: string
        behavior:
          type: string
          enum:
            - VOLATILE
            - STABLE
            - IMMUTABLE
        config_params:
          type: object
        definition:
          type: string
        language:
          type: string
        name:
          type: string
        return_type:
          type: string
        schema:
          type: string
        security_definer:
          type: boolean
      required:
        - args
        - behavior
        - definition
        - language
        - name
        - return_type
        - schema
        - security_definer
    UpdateFunctionBody:
      type: object
      properties:
        id:
          type: number
        args:
          type: array
          items:
            type: string
        behavior:
          type: string
          enum:
            - VOLATILE
            - STABLE
            - IMMUTABLE
        config_params:
          type: object
        definition:
          type: string
        language:
          type: string
        name:
          type: string
        return_type:
          type: string
        schema:
          type: string
        security_definer:
          type: boolean
    PostgresMaterializedView:
      type: object
      properties:
        id:
          type: number
        schema:
          type: string
        name:
          type: string
        is_populated:
          type: boolean
        comment:
          type: string
          nullable: true
        columns:
          type: array
          items:
            $ref: '#/components/schemas/PostgresColumn'
      required:
        - id
        - schema
        - name
        - is_populated
        - comment
    PostgresPolicy:
      type: object
      properties:
        id:
          type: number
        schema:
          type: string
        table:
          type: string
        table_id:
          type: number
        name:
          type: string
        action:
          enum:
            - PERMISSIVE
            - RESTRICTIVE
          type: string
        roles:
          type: array
          items:
            type: string
        command:
          enum:
            - SELECT
            - INSERT
            - UPDATE
            - DELETE
            - ALL
          type: string
        definition:
          type: string
          nullable: true
        check:
          type: string
          nullable: true
      required:
        - id
        - schema
        - table
        - table_id
        - name
        - action
        - roles
        - command
        - definition
        - check
    CreatePolicyBody:
      type: object
      properties:
        name:
          type: string
        table:
          type: string
        schema:
          type: string
        definition:
          type: string
        check:
          type: string
        action:
          type: string
          enum:
            - PERMISSIVE
            - RESTRICTIVE
        command:
          type: string
          enum:
            - SELECT
            - INSERT
            - UPDATE
            - DELETE
            - ALL
        roles:
          type: array
          items:
            type: string
      required:
        - name
        - table
    UpdatePolicyBody:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        definition:
          type: string
        check:
          type: string
        roles:
          type: array
          items:
            type: string
    Table:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        schema:
          type: string
      required:
        - id
        - name
        - schema
    PostgresPublication:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        owner:
          type: string
        publish_insert:
          type: boolean
        publish_update:
          type: boolean
        publish_delete:
          type: boolean
        publish_truncate:
          type: boolean
        tables:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/Table'
      required:
        - id
        - name
        - owner
        - publish_insert
        - publish_update
        - publish_delete
        - publish_truncate
        - tables
    CreatePublicationBody:
      type: object
      properties:
        name:
          type: string
        owner:
          type: string
        tables:
          nullable: true
          type: array
          items:
            type: string
        publish_insert:
          type: boolean
        publish_update:
          type: boolean
        publish_delete:
          type: boolean
        publish_truncate:
          type: boolean
      required:
        - name
    UpdatePublicationBody:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        owner:
          type: string
        tables:
          nullable: true
          type: array
          items:
            type: string
        publish_insert:
          type: boolean
        publish_update:
          type: boolean
        publish_delete:
          type: boolean
        publish_truncate:
          type: boolean
    RunQueryBody:
      type: object
      properties:
        query:
          type: string
      required:
        - query
    FormatQueryBody:
      type: object
      properties:
        query:
          type: string
      required:
        - query
    ValidateQueryBody:
      type: object
      properties:
        query:
          type: string
      required:
        - query
    ValidateQueryResponse:
      type: object
      properties:
        valid:
          type: boolean
      required:
        - valid
    PostgresRole:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        is_superuser:
          type: boolean
        can_create_db:
          type: boolean
        can_create_role:
          type: boolean
        inherit_role:
          type: boolean
        can_login:
          type: boolean
        is_replication_role:
          type: boolean
        can_bypass_rls:
          type: boolean
        active_connections:
          type: number
        connection_limit:
          type: number
        password:
          type: string
        valid_until:
          type: string
          nullable: true
        config:
          nullable: true
          type: array
          items:
            type: string
      required:
        - id
        - name
        - is_superuser
        - can_create_db
        - can_create_role
        - inherit_role
        - can_login
        - is_replication_role
        - can_bypass_rls
        - active_connections
        - connection_limit
        - password
        - valid_until
        - config
    CreateRoleBody:
      type: object
      properties:
        name:
          type: string
        password:
          type: string
        inherit_role:
          type: boolean
        can_login:
          type: boolean
        is_superuser:
          type: boolean
        can_create_db:
          type: boolean
        can_create_role:
          type: boolean
        is_replication_role:
          type: boolean
        can_bypass_rls:
          type: boolean
        connection_limit:
          type: number
        member_of:
          type: array
          items:
            type: string
        members:
          type: array
          items:
            type: string
        admins:
          type: array
          items:
            type: string
        valid_until:
          type: string
        config:
          type: object
      required:
        - name
    UpdateRoleBody:
      type: object
      properties:
        name:
          type: string
        password:
          type: string
        inherit_role:
          type: boolean
        can_login:
          type: boolean
        is_superuser:
          type: boolean
        can_create_db:
          type: boolean
        can_create_role:
          type: boolean
        is_replication_role:
          type: boolean
        can_bypass_rls:
          type: boolean
        connection_limit:
          type: number
        valid_until:
          type: string
        config:
          type: object
    PostgresSchema:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        owner:
          type: string
      required:
        - id
        - name
        - owner
    CreateSchemaBody:
      type: object
      properties:
        name:
          type: string
        owner:
          type: string
      required:
        - name
        - owner
    UpdateSchemaBody:
      type: object
      properties:
        name:
          type: string
        owner:
          type: string
    SearchTableBody:
      type: object
      properties:
        name:
          type: string
        schema:
          type: string
      required:
        - name
        - schema
    SearchColumnBody:
      type: object
      properties:
        name:
          type: string
        schema:
          type: string
      required:
        - name
        - schema
    Column:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        schema:
          type: string
        table_id:
          type: number
        table:
          type: string
      required:
        - id
        - name
        - schema
        - table_id
        - table
    TablePrivilege:
      type: object
      properties:
        grantor:
          type: string
        grantee:
          type: string
        privilege_type:
          type: string
          enum:
            - ALL
            - SELECT
            - INSERT
            - UPDATE
            - DELETE
            - TRUNCATE
            - REFERENCES
            - TRIGGER
        is_grantable:
          type: boolean
      required:
        - grantor
        - grantee
        - privilege_type
        - is_grantable
    PostgresTablePrivileges:
      type: object
      properties:
        schema:
          type: string
        name:
          type: string
        kind:
          type: string
        privileges:
          type: array
          items:
            $ref: '#/components/schemas/TablePrivilege'
      required:
        - schema
        - name
        - kind
        - privileges
    GrantTablePrivilegesBody:
      type: object
      properties:
        is_grantable:
          type: boolean
        relation_id:
          type: number
        grantee:
          type: string
        privilege_type:
          type: string
          enum:
            - ALL
            - SELECT
            - INSERT
            - UPDATE
            - DELETE
            - TRUNCATE
            - REFERENCES
            - TRIGGER
      required:
        - relation_id
        - grantee
        - privilege_type
    RevokeTablePrivilegesBody:
      type: object
      properties:
        relation_id:
          type: number
        grantee:
          type: string
        privilege_type:
          type: string
          enum:
            - ALL
            - SELECT
            - INSERT
            - UPDATE
            - DELETE
            - TRUNCATE
            - REFERENCES
            - TRIGGER
      required:
        - relation_id
        - grantee
        - privilege_type
    PrimaryKey:
      type: object
      properties:
        schema:
          type: string
        table_name:
          type: string
        name:
          type: string
        table_id:
          type: number
      required:
        - schema
        - table_name
        - name
        - table_id
    Relationship:
      type: object
      properties:
        id:
          type: number
        constraint_name:
          type: string
        source_schema:
          type: string
        source_table_name:
          type: string
        source_column_name:
          type: string
        target_table_schema:
          type: string
        target_table_name:
          type: string
        target_column_name:
          type: string
      required:
        - id
        - constraint_name
        - source_schema
        - source_table_name
        - source_column_name
        - target_table_schema
        - target_table_name
        - target_column_name
    PostgresTable:
      type: object
      properties:
        id:
          type: number
        schema:
          type: string
        name:
          type: string
        rls_enabled:
          type: boolean
        rls_forced:
          type: boolean
        replica_identity:
          enum:
            - DEFAULT
            - INDEX
            - FULL
            - NOTHING
          type: string
        bytes:
          type: number
        size:
          type: string
        live_rows_estimate:
          type: number
        dead_rows_estimate:
          type: number
        comment:
          type: string
          nullable: true
        columns:
          type: array
          items:
            $ref: '#/components/schemas/PostgresColumn'
        primary_keys:
          type: array
          items:
            $ref: '#/components/schemas/PrimaryKey'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
      required:
        - id
        - schema
        - name
        - rls_enabled
        - rls_forced
        - replica_identity
        - bytes
        - size
        - live_rows_estimate
        - dead_rows_estimate
        - comment
        - primary_keys
        - relationships
    CreateTableBody:
      type: object
      properties:
        name:
          type: string
        schema:
          type: string
        comment:
          type: string
      required:
        - name
    UpdateTableBody:
      type: object
      properties:
        id:
          type: number
        rls_enabled:
          type: boolean
        rls_forced:
          type: boolean
        replica_identity:
          type: string
          enum:
            - DEFAULT
            - INDEX
            - FULL
            - NOTHING
        replica_identity_index:
          type: string
        name:
          type: string
        schema:
          type: string
        comment:
          type: string
    PostgresTrigger:
      type: object
      properties:
        id:
          type: number
        table_id:
          type: number
        enabled_mode:
          enum:
            - ORIGIN
            - REPLICA
            - ALWAYS
            - DISABLED
          type: string
        name:
          type: string
        table:
          type: string
        schema:
          type: string
        condition:
          type: string
          nullable: true
        orientation:
          enum:
            - ROW
            - STATEMENT
          type: string
        activation:
          enum:
            - AFTER
            - BEFORE
          type: string
        events:
          type: array
          items:
            type: string
        function_schema:
          type: string
        function_name:
          type: string
        function_args:
          type: array
          items:
            type: string
      required:
        - id
        - table_id
        - enabled_mode
        - name
        - table
        - schema
        - condition
        - orientation
        - activation
        - events
        - function_schema
        - function_name
        - function_args
    CreateTriggerBody:
      type: object
      properties:
        activation:
          type: string
          enum:
            - AFTER
            - BEFORE
        enabled_mode:
          type: string
          enum:
            - ORIGIN
            - REPLICA
            - ALWAYS
            - DISABLED
        events:
          type: array
          items:
            type: string
            enum:
              - INSERT
              - UPDATE
              - DELETE
        function_args:
          type: array
          items:
            type: string
        function_name:
          type: string
        function_schema:
          type: string
        name:
          type: string
        orientation:
          type: string
          enum:
            - ROW
            - STATEMENT
        schema:
          type: string
        table:
          type: string
        table_id:
          type: number
      required:
        - activation
        - enabled_mode
        - events
        - function_args
        - function_name
        - function_schema
        - name
        - orientation
        - schema
        - table
    UpdateTriggerBody:
      type: object
      properties:
        id:
          type: number
        activation:
          type: string
          enum:
            - AFTER
            - BEFORE
        enabled_mode:
          type: string
          enum:
            - ORIGIN
            - REPLICA
            - ALWAYS
            - DISABLED
        events:
          type: array
          items:
            type: string
            enum:
              - INSERT
              - UPDATE
              - DELETE
        function_args:
          type: array
          items:
            type: string
        function_name:
          type: string
        function_schema:
          type: string
        name:
          type: string
        orientation:
          type: string
          enum:
            - ROW
            - STATEMENT
        schema:
          type: string
        table:
          type: string
        table_id:
          type: number
    PostgresType:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        schema:
          type: string
        format:
          type: string
        enums:
          type: array
          items:
            type: string
        comment:
          type: string
          nullable: true
      required:
        - id
        - name
        - schema
        - format
        - enums
        - comment
    PostgresView:
      type: object
      properties:
        id:
          type: number
        schema:
          type: string
        name:
          type: string
        is_updatable:
          type: boolean
        comment:
          type: string
          nullable: true
        columns:
          type: array
          items:
            $ref: '#/components/schemas/PostgresColumn'
      required:
        - id
        - schema
        - name
        - is_updatable
        - comment
    ProjectInfo:
      type: object
      properties:
        cloud_provider:
          type: string
        id:
          type: number
        inserted_at:
          type: string
        name:
          type: string
        organization_id:
          type: number
        ref:
          type: string
        region:
          type: string
        status:
          type: string
        subscription_id:
          type: string
        is_readonly_mode_enabled:
          type: boolean
        is_branch_enabled:
          type: boolean
        preview_branch_refs:
          type: array
          items:
            type: string
      required:
        - cloud_provider
        - id
        - inserted_at
        - name
        - organization_id
        - ref
        - region
        - status
        - subscription_id
        - is_branch_enabled
        - preview_branch_refs
    AmiSearchOptions:
      type: object
      properties:
        search_tags:
          type: object
    CustomSupabaseInternalRequests:
      type: object
      properties:
        ami:
          $ref: '#/components/schemas/AmiSearchOptions'
      required:
        - ami
    CreateProjectBody:
      type: object
      properties:
        cloud_provider:
          type: string
        org_id:
          type: number
        name:
          type: string
        db_pass:
          type: string
          minLength: 4
        db_region:
          type: string
        db_pricing_tier_id:
          type: string
        db_sql:
          type: string
        auth_site_url:
          type: string
        vercel_configuration_id:
          type: string
        kps_enabled:
          type: boolean
        custom_supabase_internal_requests:
          $ref: '#/components/schemas/CustomSupabaseInternalRequests'
      required:
        - cloud_provider
        - org_id
        - name
        - db_pass
        - db_region
        - db_pricing_tier_id
        - custom_supabase_internal_requests
    CreateProjectResponse:
      type: object
      properties:
        cloud_provider:
          type: string
        id:
          type: number
        inserted_at:
          type: string
        name:
          type: string
        organization_id:
          type: number
        ref:
          type: string
        region:
          type: string
        status:
          type: string
        subscription_id:
          type: string
        is_readonly_mode_enabled:
          type: boolean
        is_branch_enabled:
          type: boolean
        preview_branch_refs:
          type: array
          items:
            type: string
        endpoint:
          type: string
        anon_key:
          type: string
        service_key:
          type: string
      required:
        - cloud_provider
        - id
        - inserted_at
        - name
        - organization_id
        - ref
        - region
        - status
        - subscription_id
        - is_branch_enabled
        - preview_branch_refs
        - endpoint
        - anon_key
        - service_key
    GetMetricsBody:
      type: object
      properties:
        metric:
          type: string
          enum:
            - user_queries
        interval:
          type: string
          enum:
            - 1d
            - 3d
            - 7d
        project_refs:
          type: array
          items:
            type: string
        region:
          type: string
      required:
        - metric
        - interval
        - project_refs
        - region
    ProjectMetric:
      type: object
      properties:
        project_ref:
          type: string
        metric:
          type: string
        value:
          type: number
      required:
        - project_ref
        - metric
        - value
    GetMetricsResponse:
      type: object
      properties:
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/ProjectMetric'
      required:
        - metrics
    StorageBucket:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        owner:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        public:
          type: boolean
      required:
        - id
        - name
        - owner
        - created_at
        - updated_at
        - public
    UpdateStorageBucketBody:
      type: object
      properties:
        public:
          type: boolean
        file_size_limit:
          type: number
        allowed_mime_types:
          type: array
          items:
            type: string
      required:
        - public
        - file_size_limit
        - allowed_mime_types
    CreateStorageBucketBody:
      type: object
      properties:
        id:
          type: string
          pattern: /^(\w|!|-|\.|\*|'|\(|\)| |&|\$|@|=|;|:|\+|,|\?)*$/
        public:
          type: boolean
        file_size_limit:
          type: number
        allowed_mime_types:
          type: array
          items:
            type: string
      required:
        - id
        - public
        - file_size_limit
        - allowed_mime_types
    StorageObjectSortBy:
      type: object
      properties:
        column:
          type: string
        order:
          type: string
    StorageObjectSearchOptions:
      type: object
      properties:
        limit:
          type: number
        offset:
          type: number
        sortBy:
          $ref: '#/components/schemas/StorageObjectSortBy'
        search:
          type: string
    GetObjectsBody:
      type: object
      properties:
        path:
          type: string
        options:
          $ref: '#/components/schemas/StorageObjectSearchOptions'
      required:
        - path
        - options
    StorageObject:
      type: object
      properties:
        name:
          type: string
        bucket_id:
          type: string
        owner:
          type: string
        id:
          type: string
        updated_at:
          type: string
        created_at:
          type: string
        last_accessed_at:
          type: string
        metadata:
          type: object
        buckets:
          $ref: '#/components/schemas/StorageBucket'
      required:
        - name
        - bucket_id
        - owner
        - id
        - updated_at
        - created_at
        - last_accessed_at
        - metadata
        - buckets
    StorageObjectTransformOptions:
      type: object
      properties:
        width:
          type: number
        height:
          type: number
        resize:
          type: string
          enum:
            - cover
            - contain
            - fill
        quality:
          type: number
        format:
          type: string
          enum:
            - origin
    PublicUrlOptions:
      type: object
      properties:
        transform:
          $ref: '#/components/schemas/StorageObjectTransformOptions'
        download:
          type: boolean
        downloadName:
          type: string
    GetPublicUrlBody:
      type: object
      properties:
        path:
          type: string
        options:
          $ref: '#/components/schemas/PublicUrlOptions'
      required:
        - path
    PublicUrlResponse:
      type: object
      properties:
        publicUrl:
          type: string
      required:
        - publicUrl
    DownloadObjectOptions:
      type: object
      properties:
        transform:
          $ref: '#/components/schemas/StorageObjectTransformOptions'
        download:
          type: boolean
        downloadName:
          type: string
    DownloadObjectBody:
      type: object
      properties:
        path:
          type: string
        options:
          $ref: '#/components/schemas/DownloadObjectOptions'
      required:
        - path
    SignedUrlOptions:
      type: object
      properties:
        transform:
          $ref: '#/components/schemas/StorageObjectTransformOptions'
        download:
          type: boolean
        downloadName:
          type: string
    GetSignedUrlBody:
      type: object
      properties:
        path:
          type: string
        expiresIn:
          type: number
        options:
          $ref: '#/components/schemas/SignedUrlOptions'
      required:
        - path
        - expiresIn
    SignedUrlResponse:
      type: object
      properties:
        signedUrl:
          type: string
      required:
        - signedUrl
    SignedUrlsOptions:
      type: object
      properties:
        download:
          type: boolean
        downloadName:
          type: string
    GetSignedUrlsBody:
      type: object
      properties:
        path:
          type: array
          items:
            type: string
        expiresIn:
          type: number
        options:
          $ref: '#/components/schemas/SignedUrlsOptions'
      required:
        - path
        - expiresIn
    SignedUrlsResponse:
      type: object
      properties:
        signedUrl:
          type: string
        error:
          type: string
          nullable: true
        path:
          type: string
          nullable: true
      required:
        - signedUrl
        - error
        - path
    CopyObjectBody:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
      required:
        - from
        - to
    CopyObjectResponse:
      type: object
      properties:
        path:
          type: string
      required:
        - path
    MoveObjectBody:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
      required:
        - from
        - to
    DeleteObjectsBody:
      type: object
      properties:
        paths:
          type: array
          items:
            type: string
      required:
        - paths
    NotificationResponseV1:
      type: object
      properties:
        id:
          type: string
        inserted_at:
          type: string
        project_id:
          type: number
        notification_name:
          type: string
        notification_status:
          type: string
        data:
          type: object
        meta:
          type: object
      required:
        - id
        - inserted_at
        - project_id
        - notification_name
        - notification_status
        - data
        - meta
    UpdateNotificationsBodyV1:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
      required:
        - ids
    NotificationResponseV2:
      type: object
      properties:
        id:
          type: string
        inserted_at:
          type: string
        type:
          type: object
        status:
          type: object
        priority:
          type: object
        name:
          type: string
        data:
          type: object
        meta:
          type: object
      required:
        - id
        - inserted_at
        - type
        - status
        - priority
        - name
        - data
        - meta
    UpdateOrganizationBody:
      type: object
      properties:
        name:
          type: string
        billing_email:
          type: string
        opt_in_tags:
          type: array
          items:
            type: string
      required:
        - name
        - billing_email
        - opt_in_tags
    OrganizationSlugResponse:
      type: object
      properties:
        id:
          type: number
        slug:
          type: string
        name:
          type: string
        billing_email:
          type: string
        stripe_customer_id:
          type: string
        opt_in_tags:
          type: array
          items:
            type: string
      required:
        - id
        - slug
        - name
        - billing_email
        - stripe_customer_id
        - opt_in_tags
    Role:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
      required:
        - id
        - name
    Invite:
      type: object
      properties:
        invited_id:
          type: number
        invited_at:
          type: string
        invited_email:
          type: string
        role_id:
          type: number
      required:
        - invited_id
        - invited_at
        - invited_email
        - role_id
    InviteUserBody:
      type: object
      properties:
        invited_email:
          type: string
        owner_id:
          type: number
        role_id:
          type: number
      required:
        - invited_email
        - owner_id
        - role_id
    SendInviteResponse:
      type: object
      properties:
        invited_at:
          type: string
        invited_email:
          type: string
        role_id:
          type: number
      required:
        - invited_at
        - invited_email
        - role_id
    InviteResponse:
      type: object
      properties:
        organization_name:
          type: string
        invite_id:
          type: string
        token_does_not_exist:
          type: boolean
        email_match:
          type: boolean
        authorized_user:
          type: boolean
        expired_token:
          type: boolean
      required:
        - organization_name
        - invite_id
        - token_does_not_exist
        - email_match
        - authorized_user
        - expired_token
    JoinResponse:
      type: object
      properties:
        billing_email:
          type: string
        id:
          type: number
        name:
          type: string
        slug:
          type: string
        stripe_customer_id:
          type: string
      required:
        - billing_email
        - id
        - name
        - slug
        - stripe_customer_id
    Member:
      type: object
      properties:
        gotrue_id:
          type: string
        primary_email:
          type: string
        role_ids:
          type: array
          items:
            type: number
        username:
          type: string
      required:
        - gotrue_id
        - primary_email
        - role_ids
        - username
    UpdateMemberBody:
      type: object
      properties:
        role_id:
          type: number
      required:
        - role_id
    GetUserContentObject:
      type: object
      properties:
        owner:
          type: object
          properties:
            id:
              type: number
            username:
              type: string
          required:
            - username
            - id
        updated_by:
          type: object
          properties:
            id:
              type: number
            username:
              type: string
          required:
            - username
            - id
        id:
          type: string
        inserted_at:
          type: string
        updated_at:
          type: string
        type:
          type: object
        visibility:
          type: object
        name:
          type: string
        description:
          type: string
        project_id:
          type: number
        owner_id:
          type: number
        last_updated_by:
          type: number
      required:
        - owner
        - updated_by
        - id
        - inserted_at
        - updated_at
        - type
        - visibility
        - name
        - project_id
        - owner_id
        - last_updated_by
    GetUserContentResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetUserContentObject'
      required:
        - data
    CreateContentParams:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
          enum: &ref_66
            - sql
            - report
            - log_sql
        visibility:
          type: string
          enum: &ref_67
            - user
            - project
            - org
            - public
        content:
          type: object
        owner_id:
          type: number
      required:
        - id
        - name
        - description
        - type
        - visibility
    UserContentObject:
      type: object
      properties:
        id:
          type: string
        inserted_at:
          type: string
        updated_at:
          type: string
        type:
          type: object
        visibility:
          type: object
        name:
          type: string
        description:
          type: string
        project_id:
          type: number
        owner_id:
          type: number
        last_updated_by:
          type: number
      required:
        - id
        - inserted_at
        - updated_at
        - type
        - visibility
        - name
        - project_id
        - owner_id
        - last_updated_by
    UpsertContentParams:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          enum: *ref_66
          type: string
        visibility:
          enum: *ref_67
          type: string
        content:
          type: object
        owner_id:
          type: number
        project_id:
          type: number
      required:
        - id
        - name
        - description
        - type
        - visibility
        - project_id
    UpdateContentParams:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
          enum:
            - sql
            - report
            - log_sql
        visibility:
          type: string
          enum:
            - user
            - project
            - org
            - public
        content:
          type: object
        owner_id:
          type: number
    UpdatePasswordBody:
      type: object
      properties:
        password:
          type: string
          minLength: 4
      required:
        - password
    Buffer:
      type: object
      properties: {}
    ResizeBody:
      type: object
      properties:
        volume_size_gb:
          type: number
      required:
        - volume_size_gb
    ServiceVersions:
      type: object
      properties:
        gotrue:
          type: string
        postgrest:
          type: string
        supabase-postgres:
          type: string
      required:
        - gotrue
        - postgrest
        - supabase-postgres
    ProjectDetailResponse:
      type: object
      properties:
        cloud_provider:
          type: string
        db_host:
          type: string
        id:
          type: number
        inserted_at:
          type: string
        name:
          type: string
        organization_id:
          type: number
        ref:
          type: string
        region:
          type: string
        status:
          type: string
          enum:
            - INACTIVE
            - ACTIVE_HEALTHY
            - ACTIVE_UNHEALTHY
            - COMING_UP
            - UNKNOWN
            - GOING_DOWN
            - INIT_FAILED
            - REMOVED
            - RESTORING
            - UPGRADING
        subscription_id:
          type: string
        connectionString:
          type: string
        kpsVersion:
          type: string
        dbVersion:
          type: string
        restUrl:
          type: string
        serviceVersions:
          $ref: '#/components/schemas/ServiceVersions'
        volumeSizeGb:
          type: number
        maxDatabasePreprovisionGb:
          type: number
        lastDatabaseResizeAt:
          type: string
        is_branch_enabled:
          type: boolean
        parent_project_ref:
          type: string
      required:
        - cloud_provider
        - db_host
        - id
        - inserted_at
        - name
        - organization_id
        - ref
        - region
        - status
        - subscription_id
        - connectionString
        - restUrl
        - is_branch_enabled
    ProjectRefResponse:
      type: object
      properties:
        id:
          type: number
        ref:
          type: string
        name:
          type: string
      required:
        - id
        - ref
        - name
    UpdateProjectBody:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    RestoreProjectBody:
      type: object
      properties:
        kps_enabled:
          type: boolean
    BackupId:
      type: object
      properties:
        id:
          type: number
      required:
        - id
    RestoreProjectInfo:
      type: object
      properties:
        id:
          type: number
        status:
          type: string
        organization_id:
          type: number
        subscription_id:
          type: string
        region:
          type: string
        cloud_provider:
          type: string
        back_ups:
          type: array
          items:
            $ref: '#/components/schemas/BackupId'
      required:
        - id
        - status
        - organization_id
        - subscription_id
        - region
        - cloud_provider
        - back_ups
    RestartServiceRequest:
      type: object
      properties:
        services:
          type: array
          items:
            type: string
            enum:
              - adminapi
              - api-gateway
              - functions
              - gotrue
              - kong
              - pgbouncer
              - pgsodium
              - postgresql
              - postgrest
              - realtime
              - storage
              - walg
              - autoshutdown
        source_notification_id:
          type: string
        region:
          type: string
      required:
        - services
        - region
    RestartServicesBody:
      type: object
      properties:
        restartRequest:
          $ref: '#/components/schemas/RestartServiceRequest'
      required:
        - restartRequest
    ProjectAppConfigResponse:
      type: object
      properties:
        db_schema:
          type: string
        endpoint:
          type: string
        realtime_multitenant_enabled:
          type: boolean
      required:
        - db_schema
        - endpoint
        - realtime_multitenant_enabled
    ProjectServiceApiKeyResponse:
      type: object
      properties:
        api_key:
          type: string
        name:
          type: string
        tags:
          type: string
      required:
        - api_key
        - name
        - tags
    ProjectSettingsResponse:
      type: object
      properties:
        name:
          type: string
        ref:
          type: string
        status:
          type: string
        inserted_at:
          type: string
        db_dns_name:
          type: string
        db_host:
          type: string
        db_name:
          type: string
        db_user:
          type: string
        db_port:
          type: string
        db_ssl:
          type: boolean
        cloud_provider:
          type: string
        region:
          type: string
        app_config:
          $ref: '#/components/schemas/ProjectAppConfigResponse'
        jwt_secret:
          type: string
        service_api_keys:
          type: array
          items:
            $ref: '#/components/schemas/ProjectServiceApiKeyResponse'
      required:
        - name
        - ref
        - status
        - inserted_at
        - db_dns_name
        - db_host
        - db_name
        - db_user
        - db_port
        - db_ssl
        - cloud_provider
        - region
    UsageStatus:
      type: object
      properties:
        usage:
          type: number
        limit:
          type: number
        cost:
          type: number
        available_in_plan:
          type: boolean
      required:
        - usage
        - limit
        - cost
        - available_in_plan
    UsageStatusResponse:
      type: object
      properties:
        db_size:
          $ref: '#/components/schemas/UsageStatus'
        storage_size:
          $ref: '#/components/schemas/UsageStatus'
        db_egress:
          $ref: '#/components/schemas/UsageStatus'
        storage_egress:
          $ref: '#/components/schemas/UsageStatus'
        storage_image_render_count:
          $ref: '#/components/schemas/UsageStatus'
        monthly_active_users:
          $ref: '#/components/schemas/UsageStatus'
        monthly_active_sso_users:
          $ref: '#/components/schemas/UsageStatus'
        func_invocations:
          $ref: '#/components/schemas/UsageStatus'
        func_count:
          $ref: '#/components/schemas/UsageStatus'
        realtime_message_count:
          $ref: '#/components/schemas/UsageStatus'
        realtime_peak_connection:
          $ref: '#/components/schemas/UsageStatus'
        disk_volume_size_gb:
          type: number
      required:
        - db_size
        - storage_size
        - db_egress
        - storage_egress
        - storage_image_render_count
        - monthly_active_users
        - monthly_active_sso_users
        - func_invocations
        - func_count
        - realtime_message_count
        - realtime_peak_connection
        - disk_volume_size_gb
    AnalyticsResponse:
      type: object
      properties:
        error:
          oneOf:
            - properties:
                code:
                  type: number
                errors:
                  type: array
                  items:
                    properties:
                      domain:
                        type: string
                      location:
                        type: string
                      locationType:
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                message:
                  type: string
                status:
                  type: string
            - type: string
        result:
          type: array
          items:
            type: object
    PgbouncerConfigResponse:
      type: object
      properties:
        default_pool_size:
          type: number
        ignore_startup_parameters:
          type: string
        max_client_conn:
          type: number
        pool_mode:
          type: string
          enum:
            - transaction
            - session
            - statement
        inserted_at:
          type: string
        db_dns_name:
          type: string
        db_user:
          type: string
        db_host:
          type: string
        db_port:
          type: number
        db_name:
          type: string
        db_ssl:
          type: boolean
        pgbouncer_enabled:
          type: boolean
        supavisor_enabled:
          type: boolean
        pgbouncer_status:
          type: string
          enum:
            - COMING_DOWN
            - COMING_UP
            - DISABLED
            - ENABLED
            - RELOADING
        connectionString:
          type: string
      required:
        - inserted_at
        - db_dns_name
        - db_user
        - db_host
        - db_port
        - db_name
        - db_ssl
        - pgbouncer_enabled
        - supavisor_enabled
        - pgbouncer_status
        - connectionString
    UpdatePgbouncerConfigBody:
      type: object
      properties:
        default_pool_size:
          type: integer
          minimum: 0
          maximum: 1000
        max_client_conn:
          type: integer
          nullable: true
          minimum: 0
          maximum: 18000
        ignore_startup_parameters:
          type: string
        pgbouncer_enabled:
          type: boolean
        pool_mode:
          type: string
          enum: &ref_68
            - transaction
            - session
            - statement
      required:
        - ignore_startup_parameters
        - pgbouncer_enabled
        - pool_mode
    UpdatePoolingConfigResponse:
      type: object
      properties:
        default_pool_size:
          type: integer
          minimum: 0
          maximum: 1000
        max_client_conn:
          type: integer
          nullable: true
          minimum: 0
          maximum: 18000
        ignore_startup_parameters:
          type: string
        pgbouncer_enabled:
          type: boolean
        pool_mode:
          enum: *ref_68
          type: string
        pgbouncer_status:
          type: string
          enum:
            - COMING_DOWN
            - COMING_UP
            - DISABLED
            - ENABLED
            - RELOADING
      required:
        - ignore_startup_parameters
        - pgbouncer_enabled
        - pool_mode
        - pgbouncer_status
    PostgrestConfigResponse:
      type: object
      properties:
        max_rows:
          type: integer
        db_schema:
          type: string
        db_extra_search_path:
          type: string
      required:
        - max_rows
        - db_schema
        - db_extra_search_path
    UpdatePostgrestConfigBody:
      type: object
      properties:
        max_rows:
          type: integer
          minimum: 0
          maximum: 1000000
        db_extra_search_path:
          type: string
        db_schema:
          type: string
    PostgresConfigResponse:
      type: object
      properties:
        statement_timeout:
          type: string
        effective_cache_size:
          type: string
        maintenance_work_mem:
          type: string
        max_connections:
          type: integer
          minimum: 1
          maximum: 262143
        max_parallel_maintenance_workers:
          type: integer
          minimum: 0
          maximum: 1024
        max_parallel_workers:
          type: integer
          minimum: 0
          maximum: 1024
        max_parallel_workers_per_gather:
          type: integer
          minimum: 0
          maximum: 1024
        max_worker_processes:
          type: integer
          minimum: 0
          maximum: 262143
        shared_buffers:
          type: string
        work_mem:
          type: string
        session_replication_role:
          enum:
            - origin
            - replica
            - local
          type: string
    UpdatePostgresConfigBody:
      type: object
      properties:
        statement_timeout:
          type: string
        effective_cache_size:
          type: string
        maintenance_work_mem:
          type: string
        max_connections:
          type: integer
          minimum: 1
          maximum: 262143
        max_parallel_maintenance_workers:
          type: integer
          minimum: 0
          maximum: 1024
        max_parallel_workers:
          type: integer
          minimum: 0
          maximum: 1024
        max_parallel_workers_per_gather:
          type: integer
          minimum: 0
          maximum: 1024
        max_worker_processes:
          type: integer
          minimum: 0
          maximum: 262143
        shared_buffers:
          type: string
        work_mem:
          type: string
        session_replication_role:
          type: string
          enum:
            - origin
            - replica
            - local
    UpdateSecretsConfigBody:
      type: object
      properties:
        jwt_secret:
          type: string
        change_tracking_id:
          type: string
      required:
        - jwt_secret
        - change_tracking_id
    UpdateSecretsResponse:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    StorageConfigResponse:
      type: object
      properties:
        isFreeTier:
          type: boolean
        fileSizeLimit:
          type: number
      required:
        - isFreeTier
        - fileSizeLimit
    UpdateStorageConfigBody:
      type: object
      properties:
        fileSizeLimit:
          type: number
      required:
        - fileSizeLimit
    UpdateStorageConfigResponse:
      type: object
      properties:
        fileSizeLimit:
          type: number
      required:
        - fileSizeLimit