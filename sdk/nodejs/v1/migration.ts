// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Migration extends pulumi.CustomResource {
    /**
     * Get an existing Migration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Migration {
        return new Migration(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'supabase:v1:Migration';

    /**
     * Returns true if the given object is an instance of Migration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Migration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Migration.__pulumiType;
    }

    public readonly db_password!: pulumi.Output<string>;
    public readonly include_all!: pulumi.Output<boolean | undefined>;
    public readonly include_roles!: pulumi.Output<boolean | undefined>;
    public readonly include_seed!: pulumi.Output<boolean | undefined>;
    public readonly project_id!: pulumi.Output<string | undefined>;

    /**
     * Create a Migration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MigrationArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.db_password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'db_password'");
            }
            resourceInputs["db_password"] = args ? args.db_password : undefined;
            resourceInputs["include_all"] = args ? args.include_all : undefined;
            resourceInputs["include_roles"] = args ? args.include_roles : undefined;
            resourceInputs["include_seed"] = args ? args.include_seed : undefined;
            resourceInputs["project_id"] = args ? args.project_id : undefined;
        } else {
            resourceInputs["db_password"] = undefined /*out*/;
            resourceInputs["include_all"] = undefined /*out*/;
            resourceInputs["include_roles"] = undefined /*out*/;
            resourceInputs["include_seed"] = undefined /*out*/;
            resourceInputs["project_id"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Migration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Migration resource.
 */
export interface MigrationArgs {
    db_password: pulumi.Input<string>;
    include_all?: pulumi.Input<boolean>;
    include_roles?: pulumi.Input<boolean>;
    include_seed?: pulumi.Input<boolean>;
    project_id?: pulumi.Input<string>;
}
