// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Supabase.Projects
{
    [SupabaseResourceType("supabase:projects:Project")]
    public partial class Project : global::Pulumi.CustomResource
    {
        [Output("anon_key")]
        public Output<string> Anon_key { get; private set; } = null!;

        [Output("cloud")]
        public Output<string?> Cloud { get; private set; } = null!;

        [Output("database_host")]
        public Output<string> Database_host { get; private set; } = null!;

        [Output("db_pass")]
        public Output<string> Db_pass { get; private set; } = null!;

        [Output("kps_enabled")]
        public Output<bool?> Kps_enabled { get; private set; } = null!;

        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        [Output("organization_id")]
        public Output<int> Organization_id { get; private set; } = null!;

        [Output("plan")]
        public Output<string?> Plan { get; private set; } = null!;

        [Output("project_endpoint")]
        public Output<string> Project_endpoint { get; private set; } = null!;

        [Output("project_id")]
        public Output<int> Project_id { get; private set; } = null!;

        [Output("project_name")]
        public Output<string> Project_name { get; private set; } = null!;

        [Output("project_ref")]
        public Output<string> Project_ref { get; private set; } = null!;

        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;

        [Output("service_key")]
        public Output<string> Service_key { get; private set; } = null!;


        /// <summary>
        /// Create a Project resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Project(string name, ProjectArgs args, CustomResourceOptions? options = null)
            : base("supabase:projects:Project", name, args ?? new ProjectArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Project(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("supabase:projects:Project", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "anon_key",
                    "db_pass",
                    "service_key",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Project resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Project Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Project(name, id, options);
        }
    }

    public sealed class ProjectArgs : global::Pulumi.ResourceArgs
    {
        [Input("cloud")]
        public Input<string>? Cloud { get; set; }

        [Input("db_pass", required: true)]
        private Input<string>? _db_pass;
        public Input<string>? Db_pass
        {
            get => _db_pass;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _db_pass = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("kps_enabled")]
        public Input<bool>? Kps_enabled { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("organization_id", required: true)]
        public Input<int> Organization_id { get; set; } = null!;

        [Input("plan")]
        public Input<string>? Plan { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        public ProjectArgs()
        {
        }
        public static new ProjectArgs Empty => new ProjectArgs();
    }
}
