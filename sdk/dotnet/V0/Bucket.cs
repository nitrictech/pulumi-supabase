// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Supabase.V0
{
    [SupabaseResourceType("supabase:v0:Bucket")]
    public partial class Bucket : global::Pulumi.CustomResource
    {
        [Output("allowed_mime_types")]
        public Output<ImmutableArray<string>> Allowed_mime_types { get; private set; } = null!;

        [Output("bucket_name")]
        public Output<string> Bucket_name { get; private set; } = null!;

        [Output("file_size_limit")]
        public Output<int?> File_size_limit { get; private set; } = null!;

        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        [Output("project_ref")]
        public Output<string> Project_ref { get; private set; } = null!;

        [Output("public")]
        public Output<bool?> Public { get; private set; } = null!;


        /// <summary>
        /// Create a Bucket resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Bucket(string name, BucketArgs args, CustomResourceOptions? options = null)
            : base("supabase:v0:Bucket", name, args ?? new BucketArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Bucket(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("supabase:v0:Bucket", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Bucket resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Bucket Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Bucket(name, id, options);
        }
    }

    public sealed class BucketArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowed_mime_types")]
        private InputList<string>? _allowed_mime_types;
        public InputList<string> Allowed_mime_types
        {
            get => _allowed_mime_types ?? (_allowed_mime_types = new InputList<string>());
            set => _allowed_mime_types = value;
        }

        [Input("file_size_limit")]
        public Input<int>? File_size_limit { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project_ref", required: true)]
        public Input<string> Project_ref { get; set; } = null!;

        [Input("public")]
        public Input<bool>? Public { get; set; }

        public BucketArgs()
        {
        }
        public static new BucketArgs Empty => new BucketArgs();
    }
}
